<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="944" failures="15" errors="0" time="15.473">
  <testsuite name="webex-core" errors="0" failures="6" skipped="0" timestamp="2024-04-16T15:14:36" time="1.524" tests="6">
    <testcase classname="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a basic spark-user-agent header" name="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a basic spark-user-agent header" time="0.006">
      <failure>assert.strictEqual(received, expected)

Expected value to strictly be equal to:
  &quot;webex-js-sdk/development (node)&quot;
Received:
  &quot;webex-js-sdk/3.0.0-beta.401 (node)&quot;

Message:
  expected &apos;webex-js-sdk/3.0.0-beta.401 (node)&apos; to equal &apos;webex-js-sdk/development (node)&apos;

Difference:

- Expected
+ Received

- webex-js-sdk/development (node)
+ webex-js-sdk/3.0.0-beta.401 (node)
    at Object.equal (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/interceptors/webex-user-agent.js:28:18)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a complex spark-user-agent header" name="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a complex spark-user-agent header" time="0">
      <failure>assert.strictEqual(received, expected)

Expected value to strictly be equal to:
  &quot;webex-js-sdk/development (node)&quot;
Received:
  &quot;webex-js-sdk/3.0.0-beta.401 (node)&quot;

Message:
  expected &apos;webex-js-sdk/3.0.0-beta.401 (node)&apos; to equal &apos;webex-js-sdk/development (node)&apos;

Difference:

- Expected
+ Received

- webex-js-sdk/development (node)
+ webex-js-sdk/3.0.0-beta.401 (node)
    at Object.equal (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/interceptors/webex-user-agent.js:48:18)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a spark-user-agent header using appName/appVersion from config" name="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a spark-user-agent header using appName/appVersion from config" time="0.001">
      <failure>assert.strictEqual(received, expected)

Expected value to strictly be equal to:
  &quot;webex-js-sdk/development (node) sample/1.0.0&quot;
Received:
  &quot;webex-js-sdk/3.0.0-beta.401 (node) sample/1.0.0&quot;

Message:
  expected &apos;webex-js-sdk/3.0.0-beta.401 (node) sample/1.0.0&apos; to equal &apos;webex-js-sdk/development (node) sample/1.0.0&apos;

Difference:

- Expected
+ Received

- webex-js-sdk/development (node) sample/1.0.0
+ webex-js-sdk/3.0.0-beta.401 (node) sample/1.0.0
    at Object.equal (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/interceptors/webex-user-agent.js:75:18)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a spark-user-agent header using appName/appVersion + appPlatform from config" name="webex-core Interceptors WebexUserAgentInterceptor #onRequest adds a spark-user-agent header using appName/appVersion + appPlatform from config" time="0">
      <failure>assert.strictEqual(received, expected)

Expected value to strictly be equal to:
  &quot;webex-js-sdk/development (node) sample/1.0.0 custom-label/1.0.0&quot;
Received:
  &quot;webex-js-sdk/3.0.0-beta.401 (node) sample/1.0.0 custom-label/1.0.0&quot;

Message:
  expected &apos;webex-js-sdk/3.0.0-beta.401 (node) sample/1.0.0 custom-label/1.0.0&apos; to equal &apos;webex-js-sdk/development (node) sample/1.0.0 custom-label/1.0.0&apos;

Difference:

- Expected
+ Received

- webex-js-sdk/development (node) sample/1.0.0 custom-label/1.0.0
+ webex-js-sdk/3.0.0-beta.401 (node) sample/1.0.0 custom-label/1.0.0
    at Object.equal (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/interceptors/webex-user-agent.js:105:18)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="webex-core Interceptors WebexUserAgentInterceptor #onRequest when consumed by the webex package adds a basic spark-user-agent header using &quot;webex&quot; instead of &quot;webex-js-sdk&quot;" name="webex-core Interceptors WebexUserAgentInterceptor #onRequest when consumed by the webex package adds a basic spark-user-agent header using &quot;webex&quot; instead of &quot;webex-js-sdk&quot;" time="0">
      <failure>assert.strictEqual(received, expected)

Expected value to strictly be equal to:
  &quot;webex/development (node)&quot;
Received:
  &quot;webex/3.0.0-beta.401 (node)&quot;

Message:
  expected &apos;webex/3.0.0-beta.401 (node)&apos; to equal &apos;webex/development (node)&apos;

Difference:

- Expected
+ Received

- webex/development (node)
+ webex/3.0.0-beta.401 (node)
    at Object.equal (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/interceptors/webex-user-agent.js:129:20)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="webex-core Interceptors WebexUserAgentInterceptor #onRequest when consumed by the webex package adds a complex spark-user-agent header using &quot;webex&quot; instead of &quot;webex-js-sdk&quot;" name="webex-core Interceptors WebexUserAgentInterceptor #onRequest when consumed by the webex package adds a complex spark-user-agent header using &quot;webex&quot; instead of &quot;webex-js-sdk&quot;" time="0">
      <failure>assert.strictEqual(received, expected)

Expected value to strictly be equal to:
  &quot;webex/development (node)&quot;
Received:
  &quot;webex/3.0.0-beta.401 (node)&quot;

Message:
  expected &apos;webex/3.0.0-beta.401 (node)&apos; to equal &apos;webex/development (node)&apos;

Difference:

- Expected
+ Received

- webex/development (node)
+ webex/3.0.0-beta.401 (node)
    at Object.equal (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/interceptors/webex-user-agent.js:150:20)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="2" skipped="1" timestamp="2024-04-16T15:14:36" time="1.583" tests="26">
    <testcase classname="webex-core Services class members #registries should be a weakmap" name="webex-core Services class members #registries should be a weakmap" time="0.003">
    </testcase>
    <testcase classname="webex-core Services class members #states should be a weakmap" name="webex-core Services class members #states should be a weakmap" time="0">
    </testcase>
    <testcase classname="webex-core Services class methods #getRegistry should be a service registry" name="webex-core Services class methods #getRegistry should be a service registry" time="0">
    </testcase>
    <testcase classname="webex-core Services class methods #getState should be a service state" name="webex-core Services class methods #getState should be a service state" time="0">
    </testcase>
    <testcase classname="webex-core Services #namespace is accurate to plugin name" name="webex-core Services #namespace is accurate to plugin name" time="0">
    </testcase>
    <testcase classname="webex-core Services #_catalogs is a weakmap" name="webex-core Services #_catalogs is a weakmap" time="0.001">
    </testcase>
    <testcase classname="webex-core Services #validateDomains is a boolean" name="webex-core Services #validateDomains is a boolean" time="0">
    </testcase>
    <testcase classname="webex-core Services #list() must return an object" name="webex-core Services #list() must return an object" time="0">
    </testcase>
    <testcase classname="webex-core Services #list() returned list must be of shape {Record&lt;string, string&gt;}" name="webex-core Services #list() returned list must be of shape {Record&lt;string, string&gt;}" time="0.001">
    </testcase>
    <testcase classname="webex-core Services #fetchClientRegionInfo successfully resolves with undefined if fetch request failed" name="webex-core Services #fetchClientRegionInfo successfully resolves with undefined if fetch request failed" time="0.001">
    </testcase>
    <testcase classname="webex-core Services #getMeetingPreferences Fetch login users information " name="webex-core Services #getMeetingPreferences Fetch login users information " time="0.002">
    </testcase>
    <testcase classname="webex-core Services #getMeetingPreferences Resolve getMeetingPreferences if the api request fails " name="webex-core Services #getMeetingPreferences Resolve getMeetingPreferences if the api request fails " time="0">
    </testcase>
    <testcase classname="webex-core Services #_fetchNewServiceHostmap() checks service request resolves" name="webex-core Services #_fetchNewServiceHostmap() checks service request resolves" time="0.001">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;measureLatency&apos;)
    at Function.spy (/Users/arungane/SDK v3/WebSDKv3/node_modules/sinon/lib/sinon/spy.js:156:61)
    at Sandbox.spy (/Users/arungane/SDK v3/WebSDKv3/node_modules/sinon/lib/sinon/sandbox.js:328:35)
    at Object.spy (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/services/services.js:138:15)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:246:5)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="webex-core Services #_fetchNewServiceHostmap() checks service request rejects" name="webex-core Services #_fetchNewServiceHostmap() checks service request rejects" time="0">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;measureLatency&apos;)
    at Function.spy (/Users/arungane/SDK v3/WebSDKv3/node_modules/sinon/lib/sinon/spy.js:156:61)
    at Sandbox.spy (/Users/arungane/SDK v3/WebSDKv3/node_modules/sinon/lib/sinon/sandbox.js:328:35)
    at Object.spy (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/webex-core/test/unit/spec/services/services.js:138:15)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:246:5)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() creates a formmatted host map that contains the same amount of entries as the original received hostmap" name="webex-core Services #_formatReceivedHostmap() creates a formmatted host map that contains the same amount of entries as the original received hostmap" time="0.002">
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() creates an array of equal or less length of hostMap" name="webex-core Services #_formatReceivedHostmap() creates an array of equal or less length of hostMap" time="0">
      <skipped/>
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() creates an array with matching url data" name="webex-core Services #_formatReceivedHostmap() creates an array with matching url data" time="0">
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() has all keys in host map hosts" name="webex-core Services #_formatReceivedHostmap() has all keys in host map hosts" time="0.003">
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() creates a formmated host map containing all received host map service entries" name="webex-core Services #_formatReceivedHostmap() creates a formmated host map containing all received host map service entries" time="0.001">
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() creates a formmated host map containing all received host map host entries" name="webex-core Services #_formatReceivedHostmap() creates a formmated host map containing all received host map host entries" time="0">
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() creates an array with matching names" name="webex-core Services #_formatReceivedHostmap() creates an array with matching names" time="0.001">
    </testcase>
    <testcase classname="webex-core Services #_formatReceivedHostmap() has hostCatalog updated" name="webex-core Services #_formatReceivedHostmap() has hostCatalog updated" time="0">
    </testcase>
    <testcase classname="webex-core Services #updateCredentialsConfig() sets the idbroker url properly when trailing slash is not present" name="webex-core Services #updateCredentialsConfig() sets the idbroker url properly when trailing slash is not present" time="0">
    </testcase>
    <testcase classname="webex-core Services #updateCredentialsConfig() sets the identity url properly when a trailing slash is present" name="webex-core Services #updateCredentialsConfig() sets the identity url properly when a trailing slash is present" time="0.001">
    </testcase>
    <testcase classname="webex-core Services #updateCredentialsConfig() sets the authorize url properly when authorization string is not provided" name="webex-core Services #updateCredentialsConfig() sets the authorize url properly when authorization string is not provided" time="0">
    </testcase>
    <testcase classname="webex-core Services #updateCredentialsConfig() should retain the authorize url property when authorization string is provided" name="webex-core Services #updateCredentialsConfig() should retain the authorize url property when authorization string is provided" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-metrics" errors="0" failures="3" skipped="2" timestamp="2024-04-16T15:14:36" time="1.625" tests="12">
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully clears the queue" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully clears the queue" time="0.01">
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully doesnt include any joinTimes for other events" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully doesnt include any joinTimes for other events" time="0.006">
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.interstitial-window.launched" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.interstitial-window.launched" time="0.004">
      <failure>assert.deepStrictEqual(received, expected)

Expected value to deeply and strictly equal to:
  {&quot;joinTimes&quot;: {&quot;clickToInterstitial&quot;: 10, &quot;meetingInfoReqResp&quot;: 10, &quot;refreshCaptchaServiceReqResp&quot;: 10}, &quot;name&quot;: &quot;client.interstitial-window.launched&quot;}
Received:
  {&quot;joinTimes&quot;: {&quot;clickToInterstitial&quot;: 10, &quot;meetingInfoReqResp&quot;: 10}, &quot;name&quot;: &quot;client.interstitial-window.launched&quot;}

Message:
  expected { name: &apos;client.interstitial-window.launched&apos;, joinTimes: { meetingInfoReqResp: 10, clickToInterstitial: 10 } } to deeply equal { name: &apos;client.interstitial-window.launched&apos;, joinTimes: { clickToInterstitial: 10, meetingInfoReqResp: 10, refreshCaptchaServiceReqResp: 10 } }

Difference:

- Expected
+ Received

  Object {
    &quot;joinTimes&quot;: Object {
      &quot;clickToInterstitial&quot;: 10,
      &quot;meetingInfoReqResp&quot;: 10,
-     &quot;refreshCaptchaServiceReqResp&quot;: 10,
    },
    &quot;name&quot;: &quot;client.interstitial-window.launched&quot;,
  }
    at deepEqual (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-metrics/test/unit/spec/call-diagnostic/call-diagnostic-metrics-batcher.ts:120:18)
    at tryCatch (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:51:16)
    at Generator.&lt;anonymous&gt; (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:139:17)
    at Generator.next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:80:21)
    at asyncGeneratorStep (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:4:24)
    at _next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:23:9)</failure>
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.call.initiated" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.call.initiated" time="0.004">
      <failure>assert.deepStrictEqual(received, expected)

Expected value to deeply and strictly equal to:
  {&quot;joinTimes&quot;: {&quot;getU2CTime&quot;: 20, &quot;meetingInfoReqResp&quot;: 10, &quot;registerWDMDeviceJMT&quot;: 10, &quot;showInterstitialTime&quot;: 10}, &quot;name&quot;: &quot;client.call.initiated&quot;}
Received:
  {&quot;joinTimes&quot;: {&quot;meetingInfoReqResp&quot;: 10, &quot;registerWDMDeviceJMT&quot;: 10, &quot;showInterstitialTime&quot;: 10}, &quot;name&quot;: &quot;client.call.initiated&quot;}

Message:
  expected { name: &apos;client.call.initiated&apos;, joinTimes: { meetingInfoReqResp: 10, showInterstitialTime: 10, registerWDMDeviceJMT: 10 } } to deeply equal { name: &apos;client.call.initiated&apos;, joinTimes: { meetingInfoReqResp: 10, registerWDMDeviceJMT: 10, showInterstitialTime: 10, getU2CTime: 20 } }

Difference:

- Expected
+ Received

@@ -1,8 +1,7 @@
  Object {
    &quot;joinTimes&quot;: Object {
-     &quot;getU2CTime&quot;: 20,
      &quot;meetingInfoReqResp&quot;: 10,
      &quot;registerWDMDeviceJMT&quot;: 10,
      &quot;showInterstitialTime&quot;: 10,
    },
    &quot;name&quot;: &quot;client.call.initiated&quot;,
    at deepEqual (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-metrics/test/unit/spec/call-diagnostic/call-diagnostic-metrics-batcher.ts:151:18)
    at tryCatch (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:51:16)
    at Generator.&lt;anonymous&gt; (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:139:17)
    at Generator.next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:80:21)
    at asyncGeneratorStep (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:4:24)
    at _next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:23:9)</failure>
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.locus.join.response" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.locus.join.response" time="0.004">
      <failure>assert.deepStrictEqual(received, expected)

Expected value to deeply and strictly equal to:
  {&quot;joinTimes&quot;: {&quot;callInitJoinReq&quot;: 10, &quot;clickToInterstitial&quot;: 10, &quot;clientJmt&quot;: 5, &quot;downloadTime&quot;: 100, &quot;interstitialToJoinOK&quot;: 10, &quot;joinReqResp&quot;: 10, &quot;meetingInfoReqResp&quot;: 10, &quot;pageJmt&quot;: 30, &quot;totalJmt&quot;: 20}, &quot;name&quot;: &quot;client.locus.join.response&quot;}
Received:
  {&quot;joinTimes&quot;: {&quot;callInitJoinReq&quot;: 10, &quot;clickToInterstitial&quot;: 10, &quot;clientJmt&quot;: 5, &quot;downloadTime&quot;: 100, &quot;interstitialToJoinOK&quot;: 10, &quot;joinReqResp&quot;: 10, &quot;joinReqSentReceived&quot;: undefined, &quot;meetingInfoReqResp&quot;: 10, &quot;pageJmt&quot;: 30, &quot;totalJmt&quot;: 20}, &quot;name&quot;: &quot;client.locus.join.response&quot;}

Message:
  expected { name: &apos;client.locus.join.response&apos;, joinTimes: { meetingInfoReqResp: 10, callInitJoinReq: 10, joinReqResp: 10, joinReqSentReceived: undefined, pageJmt: 30, clickToInterstitial: 10, interstitialToJoinOK: 10, totalJmt: 20, clientJmt: 5, downloadTime: 100 } } to deeply equal { name: &apos;client.locus.join.response&apos;, joinTimes: { callInitJoinReq: 10, clickToInterstitial: 10, interstitialToJoinOK: 10, joinReqResp: 10, meetingInfoReqResp: 10, pageJmt: 30, totalJmt: 20, clientJmt: 5, downloadTime: 100 } }

Difference:

- Expected
+ Received

@@ -4,10 +4,11 @@
      &quot;clickToInterstitial&quot;: 10,
      &quot;clientJmt&quot;: 5,
      &quot;downloadTime&quot;: 100,
      &quot;interstitialToJoinOK&quot;: 10,
      &quot;joinReqResp&quot;: 10,
+     &quot;joinReqSentReceived&quot;: undefined,
      &quot;meetingInfoReqResp&quot;: 10,
      &quot;pageJmt&quot;: 30,
      &quot;totalJmt&quot;: 20,
    },
    &quot;name&quot;: &quot;client.locus.join.response&quot;,
    at deepEqual (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-metrics/test/unit/spec/call-diagnostic/call-diagnostic-metrics-batcher.ts:192:18)
    at tryCatch (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:51:16)
    at Generator.&lt;anonymous&gt; (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:139:17)
    at Generator.next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:80:21)
    at asyncGeneratorStep (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:4:24)
    at _next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:23:9)</failure>
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.ice.end" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.ice.end" time="0.003">
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.media.rx.start" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.media.rx.start" time="0.003">
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.media-engine.ready" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct join times to the request for client.media-engine.ready" time="0.004">
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct audio and video setup delays to the request for client.mediaquality.event" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully appends the correct audio and video setup delays to the request for client.mediaquality.event" time="0.006">
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully doesnt include audioSetup and videoSetup delays for other events" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request completes successfully doesnt include audioSetup and videoSetup delays for other events" time="0.003">
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher #request() when the request fails does not clear the queue" name="plugin-metrics CallDiagnosticEventsBatcher #request() when the request fails does not clear the queue" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-metrics CallDiagnosticEventsBatcher prepareItem calls prepareDiagnosticMetricItem correctly" name="plugin-metrics CallDiagnosticEventsBatcher prepareItem calls prepareDiagnosticMetricItem correctly" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="plugin-presence" errors="0" failures="0" skipped="7" timestamp="2024-04-16T15:14:37" time="0.411" tests="7">
    <testcase classname="plugin-presence Presence #get() requires a person id parameter" name="plugin-presence Presence #get() requires a person id parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-presence Presence #list() requires a parameter" name="plugin-presence Presence #list() requires a parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-presence Presence #list() requires a person array parameter" name="plugin-presence Presence #list() requires a person array parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-presence Presence #subscribe() requires a person parameter" name="plugin-presence Presence #subscribe() requires a person parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-presence Presence #subscribe() subscription request called twice with batch of 100 ids" name="plugin-presence Presence #subscribe() subscription request called twice with batch of 100 ids" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-presence Presence #unsubscribe() requires a person parameter" name="plugin-presence Presence #unsubscribe() requires a person parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-presence Presence #setStatus() requires a status" name="plugin-presence Presence #setStatus() requires a status" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="presence-worker" errors="0" failures="0" skipped="19" timestamp="2024-04-16T15:14:37" time="0.514" tests="19">
    <testcase classname="presence-worker PresenceWorker #initialize() requires webex" name="presence-worker PresenceWorker #initialize() requires webex" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #initialize() requires webex internal" name="presence-worker PresenceWorker #initialize() requires webex internal" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #enqueue() increments watchers count" name="presence-worker PresenceWorker #enqueue() increments watchers count" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #enqueue() only increments watcher if subscribed" name="presence-worker PresenceWorker #enqueue() only increments watcher if subscribed" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #enqueue() set camper time to now" name="presence-worker PresenceWorker #enqueue() set camper time to now" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #enqueue() add fetcher" name="presence-worker PresenceWorker #enqueue() add fetcher" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #enqueue() stop fetch if there is already a flight" name="presence-worker PresenceWorker #enqueue() stop fetch if there is already a flight" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #enqueue() add fetch if there is an old presence" name="presence-worker PresenceWorker #enqueue() add fetch if there is an old presence" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #enqueue() stop fetch if there is a recent presence" name="presence-worker PresenceWorker #enqueue() stop fetch if there is a recent presence" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #dequeue() does nothing if there are no watchers" name="presence-worker PresenceWorker #dequeue() does nothing if there are no watchers" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #dequeue() delete values when reached zero" name="presence-worker PresenceWorker #dequeue() delete values when reached zero" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #dequeue() decrement watchers by one" name="presence-worker PresenceWorker #dequeue() decrement watchers by one" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #checkFetchers() moves fetchers to flights" name="presence-worker PresenceWorker #checkFetchers() moves fetchers to flights" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #checkFetchers() calls presence.list" name="presence-worker PresenceWorker #checkFetchers() calls presence.list" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #checkCampers() moves campers to subscribers" name="presence-worker PresenceWorker #checkCampers() moves campers to subscribers" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #checkSubscriptions() resubscribe to expiring subscriptions" name="presence-worker PresenceWorker #checkSubscriptions() resubscribe to expiring subscriptions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #checkSubscriptions() delete expired subscriptions" name="presence-worker PresenceWorker #checkSubscriptions() delete expired subscriptions" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #cleanPresences() deletes expired presences" name="presence-worker PresenceWorker #cleanPresences() deletes expired presences" time="0">
      <skipped/>
    </testcase>
    <testcase classname="presence-worker PresenceWorker #groundskeeper() renews subscriptions" name="presence-worker PresenceWorker #groundskeeper() renews subscriptions" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="plugin-conversation" errors="0" failures="2" skipped="0" timestamp="2024-04-16T15:14:36" time="2.127" tests="55">
    <testcase classname="plugin-conversation Conversation addReaction() should add recipients to the payload if provided" name="plugin-conversation Conversation addReaction() should add recipients to the payload if provided" time="0.008">
    </testcase>
    <testcase classname="plugin-conversation Conversation deleteReaction() should add recipients to the payload if provided" name="plugin-conversation Conversation deleteReaction() should add recipients to the payload if provided" time="0.004">
    </testcase>
    <testcase classname="plugin-conversation Conversation prepare() should ammend activity recipients to the returned object" name="plugin-conversation Conversation prepare() should ammend activity recipients to the returned object" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation addReaction() should add recipients to the payload if provided" name="plugin-conversation Conversation addReaction() should add recipients to the payload if provided" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation deleteReaction() should add recipients to the payload if provided" name="plugin-conversation Conversation deleteReaction() should add recipients to the payload if provided" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation prepare() should ammend activity recipients to the returned object" name="plugin-conversation Conversation prepare() should ammend activity recipients to the returned object" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation processInmeetingchatEvent() calls transform with correct arguments" name="plugin-conversation Conversation processInmeetingchatEvent() calls transform with correct arguments" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation processInmeetingchatEvent() calls transform and returns event" name="plugin-conversation Conversation processInmeetingchatEvent() calls transform and returns event" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_inferConversationUrl Returns given convo if no id" name="plugin-conversation Conversation #_inferConversationUrl Returns given convo if no id" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_inferConversationUrl HA is disabled returns unmodified convo if URL is defined" name="plugin-conversation Conversation #_inferConversationUrl HA is disabled returns unmodified convo if URL is defined" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_inferConversationUrl HA is disabled builds URL if not defined" name="plugin-conversation Conversation #_inferConversationUrl HA is disabled builds URL if not defined" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_inferConversationUrl HA is enabled builds URL if already defined" name="plugin-conversation Conversation #_inferConversationUrl HA is enabled builds URL if already defined" time="0.006">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_inferConversationUrl HA is enabled builds URL if not defined" name="plugin-conversation Conversation #_inferConversationUrl HA is enabled builds URL if not defined" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation getConvoUrl should not return a promise" name="plugin-conversation Conversation getConvoUrl should not return a promise" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation getConvoUrl should return the url if a url is provided" name="plugin-conversation Conversation getConvoUrl should return the url if a url is provided" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #getUrlFromClusterId should convert a &quot;us&quot; cluster to WEBEX_CONVERSATION_DEFAULT_CLUSTER cluster" name="plugin-conversation Conversation #getUrlFromClusterId should convert a &quot;us&quot; cluster to WEBEX_CONVERSATION_DEFAULT_CLUSTER cluster" time="0.002">
      <failure>TypeError: this.webex.internal.services.getServiceFromClusterId is not a function
    at child.getServiceFromClusterId [as getUrlFromClusterId] (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-conversation/dist/conversation.js:106:48)
    at getUrlFromClusterId (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-conversation/test/unit/spec/conversation.js:221:43)
    at tryCatch (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:51:16)
    at Generator.&lt;anonymous&gt; (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:139:17)
    at Generator.next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:80:21)
    at asyncGeneratorStep (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:4:24)
    at _next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:23:9)
    at /Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:28:7
    at new Promise (&lt;anonymous&gt;)
    at new F (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_export.js:36:28)
    at Object.&lt;anonymous&gt; (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:20:12)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="plugin-conversation Conversation #getUrlFromClusterId should add the cluster service when missing" name="plugin-conversation Conversation #getUrlFromClusterId should add the cluster service when missing" time="0.002">
      <failure>TypeError: this.webex.internal.services.getServiceFromClusterId is not a function
    at child.getServiceFromClusterId [as getUrlFromClusterId] (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-conversation/dist/conversation.js:106:48)
    at getUrlFromClusterId (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-conversation/test/unit/spec/conversation.js:227:43)
    at tryCatch (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:51:16)
    at Generator.&lt;anonymous&gt; (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:139:17)
    at Generator.next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/regeneratorRuntime.js:80:21)
    at asyncGeneratorStep (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:4:24)
    at _next (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:23:9)
    at /Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:28:7
    at new Promise (&lt;anonymous&gt;)
    at new F (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_export.js:36:28)
    at Object.&lt;anonymous&gt; (/Users/arungane/SDK v3/WebSDKv3/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator.js:20:12)
    at Promise.then.completed (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at _runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:121:9)
    at run (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="plugin-conversation Conversation paginate should throw an error if a page is passed with no links" name="plugin-conversation Conversation paginate should throw an error if a page is passed with no links" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #getReactionSummaryByParentId() should call request" name="plugin-conversation Conversation #getReactionSummaryByParentId() should call request" time="0.004">
    </testcase>
    <testcase classname="plugin-conversation Conversation #getReactionSummaryByParentId() should not retrieve non reaction summary objects" name="plugin-conversation Conversation #getReactionSummaryByParentId() should not retrieve non reaction summary objects" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listAllChildActivitiesByParentId() retrieves correct children count" name="plugin-conversation Conversation #listAllChildActivitiesByParentId() retrieves correct children count" time="0.004">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listAllChildActivitiesByParentId() calls #listChildActivitiesByParentId() to initiate the request" name="plugin-conversation Conversation #listAllChildActivitiesByParentId() calls #listChildActivitiesByParentId() to initiate the request" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listAllChildActivitiesByParentId() returns children in ascending published order" name="plugin-conversation Conversation #listAllChildActivitiesByParentId() returns children in ascending published order" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() should throw an error when called without a conversationUrl option" name="plugin-conversation Conversation #listActivitiesThreadOrdered() should throw an error when called without a conversationUrl option" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() calls #_listActivitiesThreadOrdered()" name="plugin-conversation Conversation #listActivitiesThreadOrdered() calls #_listActivitiesThreadOrdered()" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() returns expected wrapped functions" name="plugin-conversation Conversation #listActivitiesThreadOrdered() returns expected wrapped functions" time="0.004">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions getOlder() should implement the iterator protocol" name="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions getOlder() should implement the iterator protocol" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions getNewer() should implement the iterator protocol" name="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions getNewer() should implement the iterator protocol" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions jumpToActivity() should throw an error if search object is missing" name="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions jumpToActivity() should throw an error if search object is missing" time="0.007">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions jumpToActivity() should throw an error if activity.target.url is missing" name="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions jumpToActivity() should throw an error if activity.target.url is missing" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions jumpToActivity() should implement the iterator protocol" name="plugin-conversation Conversation #listActivitiesThreadOrdered() returned functions jumpToActivity() should implement the iterator protocol" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers getActivityType should handle common activity types" name="plugin-conversation Conversation activity-thread-ordering helpers getActivityType should handle common activity types" time="0.001">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers rootActivityManager should return expected exposed functions" name="plugin-conversation Conversation activity-thread-ordering helpers rootActivityManager should return expected exposed functions" time="0.001">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers rootActivityManager should interface with internal storage object" name="plugin-conversation Conversation activity-thread-ordering helpers rootActivityManager should interface with internal storage object" time="0.001">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers getLoopCounterFailsafe should throw after looping 100 times" name="plugin-conversation Conversation activity-thread-ordering helpers getLoopCounterFailsafe should throw after looping 100 times" time="0.001">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should return expected exposed functions" name="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should return expected exposed functions" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should set no more activities when no newer activities exist" name="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should set no more activities when no newer activities exist" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should set no more activities when no older activities exist" name="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should set no more activities when no older activities exist" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should not set no more activities when newer activities exist" name="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should not set no more activities when newer activities exist" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should not set no more activities when older activities exist" name="plugin-conversation Conversation activity-thread-ordering helpers noMoreActivitiesManager should not set no more activities when older activities exist" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should return expected exposed functions" name="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should return expected exposed functions" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should set the oldest and newest activity in a batch" name="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should set the oldest and newest activity in a batch" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should bookends when newer and older activities exists" name="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should bookends when newer and older activities exists" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should not update oldest activity when only newer activities exist" name="plugin-conversation Conversation activity-thread-ordering helpers bookendManager should not update oldest activity when only newer activities exist" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers activityManager should return expected exposed functions" name="plugin-conversation Conversation activity-thread-ordering helpers activityManager should return expected exposed functions" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers activityManager should handle new replies" name="plugin-conversation Conversation activity-thread-ordering helpers activityManager should handle new replies" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers activityManager should handle edits" name="plugin-conversation Conversation activity-thread-ordering helpers activityManager should handle edits" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation activity-thread-ordering helpers activityManager should handle reactions" name="plugin-conversation Conversation activity-thread-ordering helpers activityManager should handle reactions" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_createParsedServerActivity() should add editParent field to valid edit activity" name="plugin-conversation Conversation #_createParsedServerActivity() should add editParent field to valid edit activity" time="0.003">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_createParsedServerActivity() should add replyParent field to valid reply activity" name="plugin-conversation Conversation #_createParsedServerActivity() should add replyParent field to valid reply activity" time="0.005">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_createParsedServerActivity() should add replyParent and editParent to valid edited reply activity" name="plugin-conversation Conversation #_createParsedServerActivity() should add replyParent and editParent to valid edited reply activity" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation #_createParsedServerActivity() should throw when passed in activity has no parent in activity hash" name="plugin-conversation Conversation #_createParsedServerActivity() should throw when passed in activity has no parent in activity hash" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation delete() should reject if provided param is not an object" name="plugin-conversation Conversation delete() should reject if provided param is not an object" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation delete() deletes a non-meeting container activity" name="plugin-conversation Conversation delete() deletes a non-meeting container activity" time="0.002">
    </testcase>
    <testcase classname="plugin-conversation Conversation delete() deletes a meeting container activity" name="plugin-conversation Conversation delete() deletes a meeting container activity" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="1" timestamp="2024-04-16T15:14:38" time="0.71" tests="60">
    <testcase classname="webex-core Credentials #calcRefreshTimeout generates a number between 60-90% of expiration" name="webex-core Credentials #calcRefreshTimeout generates a number between 60-90% of expiration" time="0.008">
    </testcase>
    <testcase classname="webex-core Credentials #isUnverifiedGuest should have #isUnverifiedGuest" name="webex-core Credentials #isUnverifiedGuest should have #isUnverifiedGuest" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #isUnverifiedGuest should get the user status and return as a boolean" name="webex-core Credentials #isUnverifiedGuest should get the user status and return as a boolean" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #isUnverifiedGuest should get guest user " name="webex-core Credentials #isUnverifiedGuest should get guest user " time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #isUnverifiedGuest should get login user " name="webex-core Credentials #isUnverifiedGuest should get login user " time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #canAuthorize indicates if the current state has enough information to populate an auth header, even if a token refresh or token downscope is required" name="webex-core Credentials #canAuthorize indicates if the current state has enough information to populate an auth header, even if a token refresh or token downscope is required" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #canRefresh indicates if there is presently enough information to refresh" name="webex-core Credentials #canRefresh indicates if there is presently enough information to refresh" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #buildLoginUrl() requires `state` to be an object" name="webex-core Credentials #buildLoginUrl() requires `state` to be an object" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #buildLoginUrl() prefers the hydra auth url, but falls back to idbroker" name="webex-core Credentials #buildLoginUrl() prefers the hydra auth url, but falls back to idbroker" time="0.006">
    </testcase>
    <testcase classname="webex-core Credentials #buildLoginUrl() generates the login url" name="webex-core Credentials #buildLoginUrl() generates the login url" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #buildLoginUrl() generates the login url with empty state param" name="webex-core Credentials #buildLoginUrl() generates the login url with empty state param" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #buildLogoutUrl() generates the logout url" name="webex-core Credentials #buildLogoutUrl() generates the logout url" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #buildLogoutUrl() includes a token param if passed" name="webex-core Credentials #buildLogoutUrl() includes a token param if passed" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #buildLogoutUrl() always fallsback to idbroker" name="webex-core Credentials #buildLogoutUrl() always fallsback to idbroker" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #buildLogoutUrl() allows overriding the goto url" name="webex-core Credentials #buildLogoutUrl() allows overriding the goto url" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #getOrgId() should return the OrgId of JWT-authenticated user" name="webex-core Credentials #getOrgId() should return the OrgId of JWT-authenticated user" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #getOrgId() should return the OrgId of a user-token-authenticated user" name="webex-core Credentials #getOrgId() should return the OrgId of a user-token-authenticated user" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #getOrgId() should throw if the OrgId was not determined" name="webex-core Credentials #getOrgId() should throw if the OrgId was not determined" time="0.018">
    </testcase>
    <testcase classname="webex-core Credentials #extractOrgIdFromJWT() should return the OrgId of a provided JWT" name="webex-core Credentials #extractOrgIdFromJWT() should return the OrgId of a provided JWT" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #extractOrgIdFromJWT() should throw if the provided JWT is not valid" name="webex-core Credentials #extractOrgIdFromJWT() should throw if the provided JWT is not valid" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #extractOrgIdFromJWT() should throw if the provided JWT does not contain an OrgId" name="webex-core Credentials #extractOrgIdFromJWT() should throw if the provided JWT does not contain an OrgId" time="0.006">
    </testcase>
    <testcase classname="webex-core Credentials #extractOrgIdFromJWT() should throw if no JWT was provided" name="webex-core Credentials #extractOrgIdFromJWT() should throw if no JWT was provided" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #extractOrgIdFromUserToken() should return the OrgId of the provided user token" name="webex-core Credentials #extractOrgIdFromUserToken() should return the OrgId of the provided user token" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #extractOrgIdFromUserToken() should throw when provided an invalid token" name="webex-core Credentials #extractOrgIdFromUserToken() should throw when provided an invalid token" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #extractOrgIdFromUserToken() should throw when no token is provided" name="webex-core Credentials #extractOrgIdFromUserToken() should throw when no token is provided" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() turns a portal auth string into a configuration object" name="webex-core Credentials #initialize() turns a portal auth string into a configuration object" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;&quot;" name="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;&quot;" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;&quot;" name="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;&quot;" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;access_token&quot;" name="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;access_token&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;access_token&quot;" name="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;access_token&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken&quot;" name="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken&quot;" time="0.007">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken&quot;" name="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken.access_token&quot;" name="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken.access_token&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken.access_token&quot;" name="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;authorization&quot;" name="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;authorization&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization&quot;" name="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken&quot;" name="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken&quot;" name="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken.access_token&quot;" name="webex-core Credentials #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken.access_token&quot;" time="0.002">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken.access_token&quot;" name="webex-core Credentials #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() schedules a refreshTimer" name="webex-core Credentials #initialize() schedules a refreshTimer" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #initialize() does not schedule a refreshTimer" name="webex-core Credentials #initialize() does not schedule a refreshTimer" time="0">
      <skipped/>
    </testcase>
    <testcase classname="webex-core Credentials #getUserToken() resolves with the supertoken if the supertoken matches the requested scopes" name="webex-core Credentials #getUserToken() resolves with the supertoken if the supertoken matches the requested scopes" time="0.005">
    </testcase>
    <testcase classname="webex-core Credentials #getUserToken() resolves with the token identified by the specified scopes" name="webex-core Credentials #getUserToken() resolves with the token identified by the specified scopes" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #getUserToken() uses the supertoken.scope instead of the config.scope for downscope" name="webex-core Credentials #getUserToken() uses the supertoken.scope instead of the config.scope for downscope" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #getUserToken() when no matching token is found downscopes the supertoken" name="webex-core Credentials #getUserToken() when no matching token is found downscopes the supertoken" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #getUserToken() when no scope is specified resolves with a token containing all but the kms scopes" name="webex-core Credentials #getUserToken() when no scope is specified resolves with a token containing all but the kms scopes" time="0.003">
    </testcase>
    <testcase classname="webex-core Credentials #getUserToken() when the kms downscope request fails falls back to the supertoken" name="webex-core Credentials #getUserToken() when the kms downscope request fails falls back to the supertoken" time="0.014">
    </testcase>
    <testcase classname="webex-core Credentials #getUserToken() is blocked while a token refresh is inflight" name="webex-core Credentials #getUserToken() is blocked while a token refresh is inflight" time="0.006">
    </testcase>
    <testcase classname="webex-core Credentials #invalidate() clears the refreshTimer" name="webex-core Credentials #invalidate() clears the refreshTimer" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #invalidate() clears the tokens from boundedStorage" name="webex-core Credentials #invalidate() clears the tokens from boundedStorage" time="0.006">
    </testcase>
    <testcase classname="webex-core Credentials #invalidate() prevents #getUserToken() from being invoked" name="webex-core Credentials #invalidate() prevents #getUserToken() from being invoked" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #refresh() refreshes and downscopes the supertoken, and revokes previous tokens" name="webex-core Credentials #refresh() refreshes and downscopes the supertoken, and revokes previous tokens" time="0.008">
    </testcase>
    <testcase classname="webex-core Credentials #refresh() refreshes and downscopes the supertoken even if revocation of previous token fails" name="webex-core Credentials #refresh() refreshes and downscopes the supertoken even if revocation of previous token fails" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #refresh() removes and revokes all child tokens" name="webex-core Credentials #refresh() removes and revokes all child tokens" time="0.058">
    </testcase>
    <testcase classname="webex-core Credentials #refresh() allows #getUserToken() to be revoked, but #getUserToken() promises will not resolve until the suport token has been refreshed" name="webex-core Credentials #refresh() allows #getUserToken() to be revoked, but #getUserToken() promises will not resolve until the suport token has been refreshed" time="0.01">
    </testcase>
    <testcase classname="webex-core Credentials #refresh() emits InvalidRequestError when the refresh token and access token expire" name="webex-core Credentials #refresh() emits InvalidRequestError when the refresh token and access token expire" time="0.005">
    </testcase>
    <testcase classname="webex-core Credentials #refresh() exclude invalid scopes from user token, log and call metrics when fetched supertoken scope mismatch with the configured scope" name="webex-core Credentials #refresh() exclude invalid scopes from user token, log and call metrics when fetched supertoken scope mismatch with the configured scope" time="0.019">
    </testcase>
    <testcase classname="webex-core Credentials #scheduleRefresh() refreshes token immediately if token is expired" name="webex-core Credentials #scheduleRefresh() refreshes token immediately if token is expired" time="0.004">
    </testcase>
    <testcase classname="webex-core Credentials #scheduleRefresh() schedules a token refresh" name="webex-core Credentials #scheduleRefresh() schedules a token refresh" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="plugin-dss" errors="0" failures="0" skipped="1" timestamp="2024-04-16T15:14:38" time="0.851" tests="42">
    <testcase classname="plugin-dss DSS #register() registers correctly" name="plugin-dss DSS #register() registers correctly" time="0.007">
    </testcase>
    <testcase classname="plugin-dss DSS #register() rejects when it cannot authorize" name="plugin-dss DSS #register() rejects when it cannot authorize" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #unregister() unregisters correctly" name="plugin-dss DSS #unregister() unregisters correctly" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #unregister() handles unregister when it is not registered" name="plugin-dss DSS #unregister() handles unregister when it is not registered" time="0.006">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupDetail calls _request correctly" name="plugin-dss DSS #lookupDetail calls _request correctly" time="0.007">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupDetail works correctly" name="plugin-dss DSS #lookupDetail works correctly" time="0.005">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupDetail fails correctly if lookup fails" name="plugin-dss DSS #lookupDetail fails correctly if lookup fails" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupDetail fails with default timeout when mercury does not respond" name="plugin-dss DSS #lookupDetail fails with default timeout when mercury does not respond" time="0.006">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupDetail does not fail with timeout when mercury response in time" name="plugin-dss DSS #lookupDetail does not fail with timeout when mercury response in time" time="0.005">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup calls _request correctly" name="plugin-dss DSS #lookup calls _request correctly" time="0.006">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup calls _request correctly with entityProviderType" name="plugin-dss DSS #lookup calls _request correctly with entityProviderType" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup works correctly" name="plugin-dss DSS #lookup works correctly" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup fails correctly if lookup fails" name="plugin-dss DSS #lookup fails correctly if lookup fails" time="0.002">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup calls _batchedLookup correctly" name="plugin-dss DSS #lookup calls _batchedLookup correctly" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup calls _batchedLookup correctly with entityProviderType" name="plugin-dss DSS #lookup calls _batchedLookup correctly with entityProviderType" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup Single batched lookup is made after 50 ms and works" name="plugin-dss DSS #lookup Single batched lookup is made after 50 ms and works" time="0.016">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup Single batched lookup fails correctly if lookup fails" name="plugin-dss DSS #lookup Single batched lookup fails correctly if lookup fails" time="0.01">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup Batch of 2 lookups is made after 50 ms and works" name="plugin-dss DSS #lookup Batch of 2 lookups is made after 50 ms and works" time="0.005">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup Batch of 2 lookups is made after 50 ms and one fails correctly" name="plugin-dss DSS #lookup Batch of 2 lookups is made after 50 ms and one fails correctly" time="0.014">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup Two unrelated lookups are made after 50 ms and work" name="plugin-dss DSS #lookup Two unrelated lookups are made after 50 ms and work" time="0.009">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup Two unrelated lookups are made after 50 ms and one fails correctly" name="plugin-dss DSS #lookup Two unrelated lookups are made after 50 ms and one fails correctly" time="0.005">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup fails with default timeout when mercury does not respond" name="plugin-dss DSS #lookup fails with default timeout when mercury does not respond" time="0.006">
    </testcase>
    <testcase classname="plugin-dss DSS #lookup does not fail with timeout when mercury response in time" name="plugin-dss DSS #lookup does not fail with timeout when mercury response in time" time="0.007">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupByEmail calls _request correctly" name="plugin-dss DSS #lookupByEmail calls _request correctly" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupByEmail works correctly" name="plugin-dss DSS #lookupByEmail works correctly" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupByEmail fails correctly if lookup fails" name="plugin-dss DSS #lookupByEmail fails correctly if lookup fails" time="0.008">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupByEmail fails with default timeout when mercury does not respond" name="plugin-dss DSS #lookupByEmail fails with default timeout when mercury does not respond" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #lookupByEmail does not fail with timeout when mercury response in time" name="plugin-dss DSS #lookupByEmail does not fail with timeout when mercury response in time" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #search calls _request correctly" name="plugin-dss DSS #search calls _request correctly" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #search works correctly" name="plugin-dss DSS #search works correctly" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #search fails with default timeout when mercury does not respond" name="plugin-dss DSS #search fails with default timeout when mercury does not respond" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #search does not fail with timeout when mercury response in time" name="plugin-dss DSS #search does not fail with timeout when mercury response in time" time="0.002">
    </testcase>
    <testcase classname="plugin-dss DSS #search fails with timeout when request only partially resolved" name="plugin-dss DSS #search fails with timeout when request only partially resolved" time="0.012">
    </testcase>
    <testcase classname="plugin-dss DSS #_request handles a request correctly" name="plugin-dss DSS #_request handles a request correctly" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #_request handles a request with foundPath correctly" name="plugin-dss DSS #_request handles a request with foundPath correctly" time="0.002">
    </testcase>
    <testcase classname="plugin-dss DSS #_request handles a request with foundPath and notFoundPath correctly" name="plugin-dss DSS #_request handles a request with foundPath and notFoundPath correctly" time="0.005">
    </testcase>
    <testcase classname="plugin-dss DSS #_batchedLookup calls batcher.request on new batcher for first lookup" name="plugin-dss DSS #_batchedLookup calls batcher.request on new batcher for first lookup" time="0.005">
    </testcase>
    <testcase classname="plugin-dss DSS #_batchedLookup calls batcher.request on new batcher for lookup with new resource" name="plugin-dss DSS #_batchedLookup calls batcher.request on new batcher for lookup with new resource" time="0.004">
    </testcase>
    <testcase classname="plugin-dss DSS #_batchedLookup calls batcher.request on existing batcher for lookup with existing reource" name="plugin-dss DSS #_batchedLookup calls batcher.request on existing batcher for lookup with existing reource" time="0.003">
    </testcase>
    <testcase classname="plugin-dss DSS #_batchedLookup fails fails when mercury does not respond, later batches can still pass ok" name="plugin-dss DSS #_batchedLookup fails fails when mercury does not respond, later batches can still pass ok" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-dss DSS #searchPlaces calls _request correctly" name="plugin-dss DSS #searchPlaces calls _request correctly" time="0.002">
    </testcase>
    <testcase classname="plugin-dss DSS #searchPlaces works correctly" name="plugin-dss DSS #searchPlaces works correctly" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="internal-plugin-calendar" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:38" time="1.202" tests="22">
    <testcase classname="internal-plugin-calendar Calendar Apis Private API #prefetchEncryptionKey waits for the ability to authorize before doing anything" name="internal-plugin-calendar Calendar Apis Private API #prefetchEncryptionKey waits for the ability to authorize before doing anything" time="0.01">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Private API #prefetchEncryptionKey does nothing when the current user is an unverified guest" name="internal-plugin-calendar Calendar Apis Private API #prefetchEncryptionKey does nothing when the current user is an unverified guest" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Private API #prefetchEncryptionKey creates an encryption key when the current user can authorize" name="internal-plugin-calendar Calendar Apis Private API #prefetchEncryptionKey creates an encryption key when the current user can authorize" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Private API #initialize adds relevant handlers when webex is ready" name="internal-plugin-calendar Calendar Apis Private API #initialize adds relevant handlers when webex is ready" time="0.004">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #register() on calendar register call mercury registration" name="internal-plugin-calendar Calendar Apis Public Api Contract #register() on calendar register call mercury registration" time="0.005">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #register() should trigger `calendar:register` event" name="internal-plugin-calendar Calendar Apis Public Api Contract #register() should trigger `calendar:register` event" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #register() Events trigger `calendar:update` event" name="internal-plugin-calendar Calendar Apis Public Api Contract #register() Events trigger `calendar:update` event" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #register() Events trigger `calendar:create` event" name="internal-plugin-calendar Calendar Apis Public Api Contract #register() Events trigger `calendar:create` event" time="0.004">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #register() Events trigger `calendar:delete` event" name="internal-plugin-calendar Calendar Apis Public Api Contract #register() Events trigger `calendar:delete` event" time="0.009">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #unregister() should call `mercury.unregister` and `device.unregister`" name="internal-plugin-calendar Calendar Apis Public Api Contract #unregister() should call `mercury.unregister` and `device.unregister`" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #unregister() should trigger `calendar:unregister` event" name="internal-plugin-calendar Calendar Apis Public Api Contract #unregister() should trigger `calendar:unregister` event" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #syncCalendar() should sync from calendar service" name="internal-plugin-calendar Calendar Apis Public Api Contract #syncCalendar() should sync from calendar service" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #list() should fetch the calendar list" name="internal-plugin-calendar Calendar Apis Public Api Contract #list() should fetch the calendar list" time="0.002">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #list() should fetch the calendar list and resolves with null encryptedNotes" name="internal-plugin-calendar Calendar Apis Public Api Contract #list() should fetch the calendar list and resolves with null encryptedNotes" time="0.004">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #list() should fetch the calendar list and resolves with fetched encryptedNotes" name="internal-plugin-calendar Calendar Apis Public Api Contract #list() should fetch the calendar list and resolves with fetched encryptedNotes" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #getNotes() should fetch the meeting notes" name="internal-plugin-calendar Calendar Apis Public Api Contract #getNotes() should fetch the meeting notes" time="0.004">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #getParticipants() should fetch the meeting participants" name="internal-plugin-calendar Calendar Apis Public Api Contract #getParticipants() should fetch the meeting participants" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #getNotesByUrl() should fetch the meeting notes" name="internal-plugin-calendar Calendar Apis Public Api Contract #getNotesByUrl() should fetch the meeting notes" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #getSchedulerData() should fetch meeting calendar data" name="internal-plugin-calendar Calendar Apis Public Api Contract #getSchedulerData() should fetch meeting calendar data" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #createCalendarEvent() should create an calendar event" name="internal-plugin-calendar Calendar Apis Public Api Contract #createCalendarEvent() should create an calendar event" time="0.003">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #updateCalendarEvent() should update a calendar event" name="internal-plugin-calendar Calendar Apis Public Api Contract #updateCalendarEvent() should update a calendar event" time="0.002">
    </testcase>
    <testcase classname="internal-plugin-calendar Calendar Apis Public Api Contract #deleteCalendarEvent() should delete a calendar event" name="internal-plugin-calendar Calendar Apis Public Api Contract #deleteCalendarEvent() should delete a calendar event" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="plugin-avatar" errors="0" failures="0" skipped="1" timestamp="2024-04-16T15:14:37" time="1.712" tests="15">
    <testcase classname="plugin-avatar #retrieveAvatarUrl() requires a user identifying object" name="plugin-avatar #retrieveAvatarUrl() requires a user identifying object" time="0.006">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving a single item retrieves an avatar url" name="plugin-avatar #retrieveAvatarUrl() when retrieving a single item retrieves an avatar url" time="0.106">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving a single item fails to retrieve an avatar url" name="plugin-avatar #retrieveAvatarUrl() when retrieving a single item fails to retrieve an avatar url" time="0.004">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving a single item retrieves an avatar url for a non-default size" name="plugin-avatar #retrieveAvatarUrl() when retrieving a single item retrieves an avatar url for a non-default size" time="0.105">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving a single item retrieves an avatar url for a non-standard size" name="plugin-avatar #retrieveAvatarUrl() when retrieving a single item retrieves an avatar url for a non-standard size" time="0.105">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving a single item when options.hideDefaultAvatar is true returns null if it is a default avatar and options.hideDefaultAvatar is true" name="plugin-avatar #retrieveAvatarUrl() when retrieving a single item when options.hideDefaultAvatar is true returns null if it is a default avatar and options.hideDefaultAvatar is true" time="0.105">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving a single item when options.hideDefaultAvatar is true retrieves avatar url if it is not a default avatar and options.hideDefaultAvatar is true" name="plugin-avatar #retrieveAvatarUrl() when retrieving a single item when options.hideDefaultAvatar is true retrieves avatar url if it is not a default avatar and options.hideDefaultAvatar is true" time="0.104">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves a group of avatar urls" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves a group of avatar urls" time="0.104">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items rejects each requested avatar if the api call fails" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items rejects each requested avatar if the api call fails" time="0.004">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items rejects each avatar missing from the response" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items rejects each avatar missing from the response" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for homogenous, non-default sizes" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for homogenous, non-default sizes" time="0.105">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for heterogneous, non-default sizes" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for heterogneous, non-default sizes" time="0.108">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for multiple sizes for the same user" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for multiple sizes for the same user" time="0.109">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for homogenous, non-standard sizes" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves avatar urls for homogenous, non-standard sizes" time="0.118">
    </testcase>
    <testcase classname="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves a group of avatar urls (with duplicate requests)" name="plugin-avatar #retrieveAvatarUrl() when retrieving multiple items retrieves a group of avatar urls (with duplicate requests)" time="0.105">
    </testcase>
  </testsuite>
  <testsuite name="plugin-authorization-browser-first-party" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:39" time="1.003" tests="17">
    <testcase classname="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url exchanges it for an access token and sets ready" name="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url exchanges it for an access token and sets ready" time="0.016">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url validates the csrf token" name="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url validates the csrf token" time="0.015">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url removes the oauth parameters from the url" name="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url removes the oauth parameters from the url" time="0.009">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url handles an error when exchanging an authorization code and becomes ready" name="plugin-authorization-browser-first-party Authorization #initialize() when there is a code in the url handles an error when exchanging an authorization code and becomes ready" time="0.003">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initialize() when the url contains an error throws a grant error" name="plugin-authorization-browser-first-party Authorization #initialize() when the url contains an error throws a grant error" time="0.002">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initialize() when there is nothing in the url sets ready" name="plugin-authorization-browser-first-party Authorization #initialize() when there is nothing in the url sets ready" time="0.003">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initialize() when code verifier is present in session storage passes codeVerifier to requestAuthorizationCodeGrant" name="plugin-authorization-browser-first-party Authorization #initialize() when code verifier is present in session storage passes codeVerifier to requestAuthorizationCodeGrant" time="0.005">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initiateLogin() calls #initiateAuthorizationCodeGrant()" name="plugin-authorization-browser-first-party Authorization #initiateLogin() calls #initiateAuthorizationCodeGrant()" time="0.008">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initiateLogin() adds a csrf_token to the login url and sessionStorage" name="plugin-authorization-browser-first-party Authorization #initiateLogin() adds a csrf_token to the login url and sessionStorage" time="0.006">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initiateLogin() adds a pkce code challenge" name="plugin-authorization-browser-first-party Authorization #initiateLogin() adds a pkce code challenge" time="0.005">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initiateLogin() adds emailHash" name="plugin-authorization-browser-first-party Authorization #initiateLogin() adds emailHash" time="0.003">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initiateLogin() sets #isAuthorizing" name="plugin-authorization-browser-first-party Authorization #initiateLogin() sets #isAuthorizing" time="0.004">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initiateLogin() sets #isAuthenticating" name="plugin-authorization-browser-first-party Authorization #initiateLogin() sets #isAuthenticating" time="0.008">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #initiateAuthorizationCodeGrant() redirects to the login page with response_type=code" name="plugin-authorization-browser-first-party Authorization #initiateAuthorizationCodeGrant() redirects to the login page with response_type=code" time="0.003">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #_generateCodeChallenge generates a challenge code and stores it in session storage" name="plugin-authorization-browser-first-party Authorization #_generateCodeChallenge generates a challenge code and stores it in session storage" time="0.004">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #_cleanUrl() removes the state parameter when it has no keys" name="plugin-authorization-browser-first-party Authorization #_cleanUrl() removes the state parameter when it has no keys" time="0.002">
    </testcase>
    <testcase classname="plugin-authorization-browser-first-party Authorization #_cleanUrl() keeps the parameter when it has keys" name="plugin-authorization-browser-first-party Authorization #_cleanUrl() keeps the parameter when it has keys" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="plugin-authorization-browser" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:39" time="0.997" tests="18">
    <testcase classname="plugin-authorization-browser Authorization #initialize() when there is a token in the url sets the token and sets ready" name="plugin-authorization-browser Authorization #initialize() when there is a token in the url sets the token and sets ready" time="0.008">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initialize() when there is a token in the url when url parsing is disabled sets ready" name="plugin-authorization-browser Authorization #initialize() when there is a token in the url when url parsing is disabled sets ready" time="0.004">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initialize() when there is a token in the url sets the token, refresh token and sets ready" name="plugin-authorization-browser Authorization #initialize() when there is a token in the url sets the token, refresh token and sets ready" time="0.008">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initialize() when there is a token in the url validates the csrf token" name="plugin-authorization-browser Authorization #initialize() when there is a token in the url validates the csrf token" time="0.008">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initialize() when there is a token in the url removes the oauth parameters from the url" name="plugin-authorization-browser Authorization #initialize() when there is a token in the url removes the oauth parameters from the url" time="0.003">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initialize() when there is a token in the url throws a grant error when the url contains one" name="plugin-authorization-browser Authorization #initialize() when there is a token in the url throws a grant error when the url contains one" time="0.001">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initialize() when there is nothing in the url sets ready" name="plugin-authorization-browser Authorization #initialize() when there is nothing in the url sets ready" time="0.003">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;public&quot; calls #initiateImplicitGrant()" name="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;public&quot; calls #initiateImplicitGrant()" time="0.009">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;public&quot; adds a csrf_token to the login url and sessionStorage" name="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;public&quot; adds a csrf_token to the login url and sessionStorage" time="0.008">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;private&quot; calls #initiateAuthorizationCodeGrant()" name="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;private&quot; calls #initiateAuthorizationCodeGrant()" time="0.009">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;private&quot; adds a csrf_token to the login url and sessionStorage" name="plugin-authorization-browser Authorization #initiateLogin() when clientType is &quot;private&quot; adds a csrf_token to the login url and sessionStorage" time="0.004">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateLogin() sets #isAuthorizing" name="plugin-authorization-browser Authorization #initiateLogin() sets #isAuthorizing" time="0.002">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateLogin() sets #isAuthenticating" name="plugin-authorization-browser Authorization #initiateLogin() sets #isAuthenticating" time="0.002">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #_cleanUrl() removes the state parameter when it is empty" name="plugin-authorization-browser Authorization #_cleanUrl() removes the state parameter when it is empty" time="0.005">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #_cleanUrl() removes the state parameter when only token is present" name="plugin-authorization-browser Authorization #_cleanUrl() removes the state parameter when only token is present" time="0.002">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #_cleanUrl() keeps the state parameter when it has keys" name="plugin-authorization-browser Authorization #_cleanUrl() keeps the state parameter when it has keys" time="0.003">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateImplicitGrant() redirects to the login page with response_type=token" name="plugin-authorization-browser Authorization #initiateImplicitGrant() redirects to the login page with response_type=token" time="0.002">
    </testcase>
    <testcase classname="plugin-authorization-browser Authorization #initiateAuthorizationCodeGrant() redirects to the login page with response_type=code" name="plugin-authorization-browser Authorization #initiateAuthorizationCodeGrant() redirects to the login page with response_type=code" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="plugin-lyra" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:38" time="1.408" tests="17">
    <testcase classname="plugin-lyra space #get() requires space.id" name="plugin-lyra space #get() requires space.id" time="0.001">
    </testcase>
    <testcase classname="plugin-lyra space #join() defaults to MANUAL pass type" name="plugin-lyra space #join() defaults to MANUAL pass type" time="0.002">
    </testcase>
    <testcase classname="plugin-lyra space #join() allows other pass type" name="plugin-lyra space #join() allows other pass type" time="0.001">
    </testcase>
    <testcase classname="plugin-lyra space #join() allows another uri" name="plugin-lyra space #join() allows another uri" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #join() passes on extra data field" name="plugin-lyra space #join() passes on extra data field" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #bindConversation() requires space.url" name="plugin-lyra space #bindConversation() requires space.url" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #bindConversation() requires space.id" name="plugin-lyra space #bindConversation() requires space.id" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #bindConversation() requires conversation.url" name="plugin-lyra space #bindConversation() requires conversation.url" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #bindConversation() requires conversation.kmsResourceObjectUrl" name="plugin-lyra space #bindConversation() requires conversation.kmsResourceObjectUrl" time="0.001">
    </testcase>
    <testcase classname="plugin-lyra space #unbindConversation() requires space.url" name="plugin-lyra space #unbindConversation() requires space.url" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #unbindConversation() requires space.id" name="plugin-lyra space #unbindConversation() requires space.id" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #unbindConversation() requires conversation.url" name="plugin-lyra space #unbindConversation() requires conversation.url" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #unbindConversation() requires conversation.kmsResourceObjectUrl" name="plugin-lyra space #unbindConversation() requires conversation.kmsResourceObjectUrl" time="0.001">
    </testcase>
    <testcase classname="plugin-lyra space #deleteBinding requires space.url" name="plugin-lyra space #deleteBinding requires space.url" time="0.004">
    </testcase>
    <testcase classname="plugin-lyra space #deleteBinding requires space.id" name="plugin-lyra space #deleteBinding requires space.id" time="0">
    </testcase>
    <testcase classname="plugin-lyra space #deleteBinding requires options.kmsResourceObjectUrl" name="plugin-lyra space #deleteBinding requires options.kmsResourceObjectUrl" time="0.004">
    </testcase>
    <testcase classname="plugin-lyra space #deleteBinding requires options.bindingId" name="plugin-lyra space #deleteBinding requires options.bindingId" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-board" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:38" time="1.454" tests="25">
    <testcase classname="plugin-board #addContent() requests POST all contents to contents" name="plugin-board #addContent() requests POST all contents to contents" time="0.001">
    </testcase>
    <testcase classname="plugin-board #addContent() sends large data using multiple requests" name="plugin-board #addContent() sends large data using multiple requests" time="0.012">
    </testcase>
    <testcase classname="plugin-board #setSnapshotImage() requests PATCH to board service" name="plugin-board #setSnapshotImage() requests PATCH to board service" time="0.002">
    </testcase>
    <testcase classname="plugin-board #createChannel() supports creating ambiguous channels for PMR support" name="plugin-board #createChannel() supports creating ambiguous channels for PMR support" time="0.001">
    </testcase>
    <testcase classname="plugin-board #createChannel() requests POST to channels service" name="plugin-board #createChannel() requests POST to channels service" time="0">
    </testcase>
    <testcase classname="plugin-board #deleteChannel() requests PUT to ACL service to remove the link between conversation and board" name="plugin-board #deleteChannel() requests PUT to ACL service to remove the link between conversation and board" time="0">
    </testcase>
    <testcase classname="plugin-board #deleteChannel() requests locks channel before delete when preventDeleteActiveChannel is enabled" name="plugin-board #deleteChannel() requests locks channel before delete when preventDeleteActiveChannel is enabled" time="0">
    </testcase>
    <testcase classname="plugin-board #lockChannelForDeletion() requests POST with delete lock intent" name="plugin-board #lockChannelForDeletion() requests POST with delete lock intent" time="0">
    </testcase>
    <testcase classname="plugin-board #keepActive() requests POST to keep channel status active" name="plugin-board #keepActive() requests POST to keep channel status active" time="0.001">
    </testcase>
    <testcase classname="plugin-board #deleteAllContent() requests DELETE contents" name="plugin-board #deleteAllContent() requests DELETE contents" time="0">
    </testcase>
    <testcase classname="plugin-board #deletePartialContent() requests POST contents with body contains the content to keep" name="plugin-board #deletePartialContent() requests POST contents with body contains the content to keep" time="0.001">
    </testcase>
    <testcase classname="plugin-board #_uploadImage() encrypts binary file" name="plugin-board #_uploadImage() encrypts binary file" time="0">
    </testcase>
    <testcase classname="plugin-board #_uploadImage() uploads to webex files" name="plugin-board #_uploadImage() uploads to webex files" time="0.001">
    </testcase>
    <testcase classname="plugin-board #_uploadImageToWebexFiles() uses length for upload filesize" name="plugin-board #_uploadImageToWebexFiles() uses length for upload filesize" time="0">
    </testcase>
    <testcase classname="plugin-board #_uploadImageToWebexFiles() uses size for upload filesize when length is not available" name="plugin-board #_uploadImageToWebexFiles() uses size for upload filesize when length is not available" time="0">
    </testcase>
    <testcase classname="plugin-board #_uploadImageToWebexFiles() uses byteLenght for upload filesize when length and size are not available" name="plugin-board #_uploadImageToWebexFiles() uses byteLenght for upload filesize when length and size are not available" time="0.001">
    </testcase>
    <testcase classname="plugin-board #children has a child of realtime" name="plugin-board #children has a child of realtime" time="0.001">
    </testcase>
    <testcase classname="plugin-board #getChannel() requests GET to channels service" name="plugin-board #getChannel() requests GET to channels service" time="0">
    </testcase>
    <testcase classname="plugin-board #getChannel() requires conversationId" name="plugin-board #getChannel() requires conversationId" time="0">
    </testcase>
    <testcase classname="plugin-board #getContents() requests GET contents with default page size" name="plugin-board #getContents() requests GET contents with default page size" time="0">
    </testcase>
    <testcase classname="plugin-board #getContents() requests GET contents with client defined page size" name="plugin-board #getContents() requests GET contents with client defined page size" time="0.001">
    </testcase>
    <testcase classname="plugin-board #register() requests POST data to registration service" name="plugin-board #register() requests POST data to registration service" time="0">
    </testcase>
    <testcase classname="plugin-board #registerToShareMercury() requests POST data to registration service" name="plugin-board #registerToShareMercury() requests POST data to registration service" time="0.001">
    </testcase>
    <testcase classname="plugin-board #registerToShareMercury() rejects when localClusterServiceUrls is null" name="plugin-board #registerToShareMercury() rejects when localClusterServiceUrls is null" time="0">
    </testcase>
    <testcase classname="plugin-board #registerToShareMercury() rejects when web-shared-mercury is not enabled" name="plugin-board #registerToShareMercury() rejects when web-shared-mercury is not enabled" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-support" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:40" time="0.571" tests="15">
    <testcase classname="plugin-support #_constructFileMetadata() constructs a sample File Meta Data" name="plugin-support #_constructFileMetadata() constructs a sample File Meta Data" time="0.005">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() does not send sessionId key if sessionId is not defined" name="plugin-support #_constructFileMetadata() does not send sessionId key if sessionId is not defined" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() does not send userID key if device userId is not defined" name="plugin-support #_constructFileMetadata() does not send userID key if device userId is not defined" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() does not send orgId key if device orgId is not defined" name="plugin-support #_constructFileMetadata() does not send orgId key if device orgId is not defined" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends surveySessionId if specified in metadata" name="plugin-support #_constructFileMetadata() sends surveySessionId if specified in metadata" time="0.003">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends productAreaTag if specified in metadata" name="plugin-support #_constructFileMetadata() sends productAreaTag if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends issueTypeTag if specified in metadata" name="plugin-support #_constructFileMetadata() sends issueTypeTag if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends locussessionid if specified in metadata" name="plugin-support #_constructFileMetadata() sends locussessionid if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends locusId if specified in metadata" name="plugin-support #_constructFileMetadata() sends locusId if specified in metadata" time="0.005">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends callStart if specified in metadata" name="plugin-support #_constructFileMetadata() sends callStart if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends feedbackId if specified in metadata" name="plugin-support #_constructFileMetadata() sends feedbackId if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends correlationId if specified in metadata" name="plugin-support #_constructFileMetadata() sends correlationId if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends meetingId if specified in metadata" name="plugin-support #_constructFileMetadata() sends meetingId if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #_constructFileMetadata() sends autoupload if specified in metadata" name="plugin-support #_constructFileMetadata() sends autoupload if specified in metadata" time="0.002">
    </testcase>
    <testcase classname="plugin-support #submitLogs() calls getUserToken" name="plugin-support #submitLogs() calls getUserToken" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="plugin-device" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:40" time="0.615" tests="25">
    <testcase classname="plugin-device Device events when a feature is changed should trigger a &apos;change&apos; event" name="plugin-device Device events when a feature is changed should trigger a &apos;change&apos; event" time="0.008">
    </testcase>
    <testcase classname="plugin-device Device events when a feature is changed should trigger a &apos;change:features&apos; event" name="plugin-device Device events when a feature is changed should trigger a &apos;change:features&apos; event" time="0.004">
    </testcase>
    <testcase classname="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityCheckUrl&apos; changes should call &apos;checkNetworkReachability()&apos;" name="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityCheckUrl&apos; changes should call &apos;checkNetworkReachability()&apos;" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityCheckUrl&apos; changes should set isReachabilityChecked to true" name="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityCheckUrl&apos; changes should set isReachabilityChecked to true" time="0.004">
    </testcase>
    <testcase classname="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityDuration&apos; changes should call &apos;checkNetworkReachability()&apos;" name="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityDuration&apos; changes should call &apos;checkNetworkReachability()&apos;" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityDuration&apos; changes should set isReachabilityChecked to true" name="plugin-device Device events when an network inactivity property changes when the &apos;intranetInactivityDuration&apos; changes should set isReachabilityChecked to true" time="0.002">
    </testcase>
    <testcase classname="plugin-device Device events when an network inactivity property changes when the &apos;inNetworkInactivityDuration&apos; changes should call &apos;checkNetworkReachability()&apos;" name="plugin-device Device events when an network inactivity property changes when the &apos;inNetworkInactivityDuration&apos; changes should call &apos;checkNetworkReachability()&apos;" time="0.002">
    </testcase>
    <testcase classname="plugin-device Device derived properties #registered when the device does not have a url should return false" name="plugin-device Device derived properties #registered when the device does not have a url should return false" time="0.004">
    </testcase>
    <testcase classname="plugin-device Device derived properties #registered when the device does have a url should return true" name="plugin-device Device derived properties #registered when the device does have a url should return true" time="0.004">
    </testcase>
    <testcase classname="plugin-device Device #setLogoutTimer() when the duration parameter is not set should not change the existing timer" name="plugin-device Device #setLogoutTimer() when the duration parameter is not set should not change the existing timer" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device #setLogoutTimer() when the duration parameter is zero or negative should not change the existing timer" name="plugin-device Device #setLogoutTimer() when the duration parameter is zero or negative should not change the existing timer" time="0.002">
    </testcase>
    <testcase classname="plugin-device Device #setLogoutTimer() when the duration is valid should create a &apos;change:lastUserActivityDate&apos; listener" name="plugin-device Device #setLogoutTimer() when the duration is valid should create a &apos;change:lastUserActivityDate&apos; listener" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device #setLogoutTimer() when the duration is valid should set the logout timer" name="plugin-device Device #setLogoutTimer() when the duration is valid should set the logout timer" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device #serialize() should serialize entitlement feature keys" name="plugin-device Device #serialize() should serialize entitlement feature keys" time="0.005">
    </testcase>
    <testcase classname="plugin-device Device #serialize() should serialize user feature keys" name="plugin-device Device #serialize() should serialize user feature keys" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device #refresh() If-None-Match header is added if etag is set" name="plugin-device Device #refresh() If-None-Match header is added if etag is set" time="0.005">
    </testcase>
    <testcase classname="plugin-device Device #refresh() If-None-Match header is not added if etag is not set" name="plugin-device Device #refresh() If-None-Match header is not added if etag is not set" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device #register() checks that submitInternalEvent gets called with internal.register.device.request" name="plugin-device Device #register() checks that submitInternalEvent gets called with internal.register.device.request" time="0.004">
    </testcase>
    <testcase classname="plugin-device Device #register() checks that submitInternalEvent gets called with internal.register.device.response on error" name="plugin-device Device #register() checks that submitInternalEvent gets called with internal.register.device.response on error" time="0.005">
    </testcase>
    <testcase classname="plugin-device Device #register() checks that submitInternalEvent gets called with internal.register.device.response on success" name="plugin-device Device #register() checks that submitInternalEvent gets called with internal.register.device.response on success" time="0.004">
    </testcase>
    <testcase classname="plugin-device Device #register() checks that submitInternalEvent not called when canRegister fails" name="plugin-device Device #register() checks that submitInternalEvent not called when canRegister fails" time="0.003">
    </testcase>
    <testcase classname="plugin-device Device #processRegistrationSuccess() features are set correctly if etag not in headers" name="plugin-device Device #processRegistrationSuccess() features are set correctly if etag not in headers" time="0.005">
    </testcase>
    <testcase classname="plugin-device Device #processRegistrationSuccess() if the etag matches only the user and entitlement features are updated" name="plugin-device Device #processRegistrationSuccess() if the etag matches only the user and entitlement features are updated" time="0.005">
    </testcase>
    <testcase classname="plugin-device Device #processRegistrationSuccess() if the etag matches only the user and entitlement features are updated - check when developer features are set" name="plugin-device Device #processRegistrationSuccess() if the etag matches only the user and entitlement features are updated - check when developer features are set" time="0.005">
    </testcase>
    <testcase classname="plugin-device Device #processRegistrationSuccess() if the etag does not match all the features are updated" name="plugin-device Device #processRegistrationSuccess() if the etag does not match all the features are updated" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="plugin-mercury" errors="0" failures="0" skipped="29" timestamp="2024-04-16T15:14:40" time="0.578" tests="52">
    <testcase classname="plugin-mercury Socket #open() requires a url" name="plugin-mercury Socket #open() requires a url" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() requires a forceCloseDelay option" name="plugin-mercury Socket #open() requires a forceCloseDelay option" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() requires a pingInterval option" name="plugin-mercury Socket #open() requires a pingInterval option" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() requires a pongTimeout option" name="plugin-mercury Socket #open() requires a pongTimeout option" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() requires a token option" name="plugin-mercury Socket #open() requires a token option" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() requires a trackingId option" name="plugin-mercury Socket #open() requires a trackingId option" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() requires a logger option" name="plugin-mercury Socket #open() requires a logger option" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() accepts a logLevelToken option" name="plugin-mercury Socket #open() accepts a logLevelToken option" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #binaryType proxies to the underlying socket" name="plugin-mercury Socket #binaryType proxies to the underlying socket" time="0.011">
    </testcase>
    <testcase classname="plugin-mercury Socket #bufferedAmount proxies to the underlying socket" name="plugin-mercury Socket #bufferedAmount proxies to the underlying socket" time="0.003">
    </testcase>
    <testcase classname="plugin-mercury Socket #extensions proxies to the underlying socket" name="plugin-mercury Socket #extensions proxies to the underlying socket" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Socket #protocol proxies to the underlying socket" name="plugin-mercury Socket #protocol proxies to the underlying socket" time="0.004">
    </testcase>
    <testcase classname="plugin-mercury Socket #readyState proxies to the underlying socket" name="plugin-mercury Socket #readyState proxies to the underlying socket" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #url proxies to the underlying socket" name="plugin-mercury Socket #url proxies to the underlying socket" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #open() requires a url parameter" name="plugin-mercury Socket #open() requires a url parameter" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() cannot be called more than once" name="plugin-mercury Socket #open() cannot be called more than once" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() sets the underlying socket&apos;s binary type" name="plugin-mercury Socket #open() sets the underlying socket&apos;s binary type" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when connection fails because this is a service account rejects with a BadRequest" name="plugin-mercury Socket #open() when connection fails because this is a service account rejects with a BadRequest" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when connection fails because of an invalid token rejects with a NotAuthorized" name="plugin-mercury Socket #open() when connection fails because of an invalid token rejects with a NotAuthorized" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when connection fails because of a missing entitlement rejects with a Forbidden" name="plugin-mercury Socket #open() when connection fails because of a missing entitlement rejects with a Forbidden" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when connection fails for non-authorization reasons rejects with the close event&apos;s reason" name="plugin-mercury Socket #open() when connection fails for non-authorization reasons rejects with the close event&apos;s reason" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when the connection succeeds sends an auth message up the socket" name="plugin-mercury Socket #open() when the connection succeeds sends an auth message up the socket" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when the connection succeeds when logLevelToken is set includes the logLevelToken in the authorization payload" name="plugin-mercury Socket #open() when the connection succeeds when logLevelToken is set includes the logLevelToken in the authorization payload" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when the connection succeeds kicks off ping/ping" name="plugin-mercury Socket #open() when the connection succeeds kicks off ping/ping" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when the connection succeeds resolves upon successful authorization" name="plugin-mercury Socket #open() when the connection succeeds resolves upon successful authorization" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #open() when the connection succeeds resolves upon receiving registration status" name="plugin-mercury Socket #open() when the connection succeeds resolves upon receiving registration status" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #close() closes the socket" name="plugin-mercury Socket #close() closes the socket" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Socket #close() only accepts valid close codes" name="plugin-mercury Socket #close() only accepts valid close codes" time="0.004">
    </testcase>
    <testcase classname="plugin-mercury Socket #close() accepts a reason" name="plugin-mercury Socket #close() accepts a reason" time="0.004">
    </testcase>
    <testcase classname="plugin-mercury Socket #close() can safely be called called multiple times" name="plugin-mercury Socket #close() can safely be called called multiple times" time="0.003">
    </testcase>
    <testcase classname="plugin-mercury Socket #close() signals closure if no close frame is received within the specified window" name="plugin-mercury Socket #close() signals closure if no close frame is received within the specified window" time="0.009">
    </testcase>
    <testcase classname="plugin-mercury Socket #close() cancels any outstanding ping/pong timers" name="plugin-mercury Socket #close() cancels any outstanding ping/pong timers" time="0.003">
    </testcase>
    <testcase classname="plugin-mercury Socket #send() when the socket is not in the OPEN state fails" name="plugin-mercury Socket #send() when the socket is not in the OPEN state fails" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #send() sends strings" name="plugin-mercury Socket #send() sends strings" time="0.003">
    </testcase>
    <testcase classname="plugin-mercury Socket #send() sends JSON.stringifyable object" name="plugin-mercury Socket #send() sends JSON.stringifyable object" time="0.007">
    </testcase>
    <testcase classname="plugin-mercury Socket #onclose() stops further ping checks" name="plugin-mercury Socket #onclose() stops further ping checks" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #onclose() when it receives close code 1005 emits code 4000 for reason Replaced" name="plugin-mercury Socket #onclose() when it receives close code 1005 emits code 4000 for reason Replaced" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #onclose() when it receives close code 1005 emits code 1008 for reason Authentication Failed" name="plugin-mercury Socket #onclose() when it receives close code 1005 emits code 1008 for reason Authentication Failed" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #onclose() when it receives close code 1005 emits code 1008 for reason Authentication did not happen within the timeout window of 30000 seconds." name="plugin-mercury Socket #onclose() when it receives close code 1005 emits code 1008 for reason Authentication did not happen within the timeout window of 30000 seconds." time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #onmessage() emits messages from the underlying socket" name="plugin-mercury Socket #onmessage() emits messages from the underlying socket" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #onmessage() parses received messages" name="plugin-mercury Socket #onmessage() parses received messages" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #onmessage() emits skipped sequence numbers" name="plugin-mercury Socket #onmessage() emits skipped sequence numbers" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #onmessage() acknowledges received messages" name="plugin-mercury Socket #onmessage() acknowledges received messages" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #onmessage() emits pongs separately from other messages" name="plugin-mercury Socket #onmessage() emits pongs separately from other messages" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Socket #_acknowledge requires an event" name="plugin-mercury Socket #_acknowledge requires an event" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #_acknowledge requires a message id" name="plugin-mercury Socket #_acknowledge requires a message id" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #_acknowledge acknowledges the specified message" name="plugin-mercury Socket #_acknowledge acknowledges the specified message" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Socket #_ping() sends a ping up the socket" name="plugin-mercury Socket #_ping() sends a ping up the socket" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #_ping() considers the socket closed if no pong is received in an acceptable time period" name="plugin-mercury Socket #_ping() considers the socket closed if no pong is received in an acceptable time period" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #_ping() schedules a future ping" name="plugin-mercury Socket #_ping() schedules a future ping" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #_ping() closes the socket when an unexpected pong is received" name="plugin-mercury Socket #_ping() closes the socket when an unexpected pong is received" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Socket #_ping() emits ping pong latency correctly" name="plugin-mercury Socket #_ping() emits ping pong latency correctly" time="0">
      <skipped/>
    </testcase>
  </testsuite>
  <testsuite name="plugin-logger" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:40" time="0.921" tests="47">
    <testcase classname="plugin-logger #log() prints the specified message to the console" name="plugin-logger #log() prints the specified message to the console" time="0.012">
    </testcase>
    <testcase classname="plugin-logger #log() stores the specified message in the log buffer" name="plugin-logger #log() stores the specified message in the log buffer" time="0.005">
    </testcase>
    <testcase classname="plugin-logger #log() adds the date to the beggining of the buffer entry" name="plugin-logger #log() adds the date to the beggining of the buffer entry" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #log() stores the specified message in the client and sdk log buffer" name="plugin-logger #log() stores the specified message in the client and sdk log buffer" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #log() prevents the buffer from overflowing" name="plugin-logger #log() prevents the buffer from overflowing" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #log() prevents the client and sdk buffer from overflowing" name="plugin-logger #log() prevents the client and sdk buffer from overflowing" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #log() buffers custom errors in a readable fashion" name="plugin-logger #log() buffers custom errors in a readable fashion" time="0.006">
    </testcase>
    <testcase classname="plugin-logger #log() formats objects as strings passed to the logger for readability not [Object object]" name="plugin-logger #log() formats objects as strings passed to the logger for readability not [Object object]" time="0.004">
    </testcase>
    <testcase classname="plugin-logger #log() formats objects as strings passed to the logger for readability not [Object object] w/ circular reference" name="plugin-logger #log() formats objects as strings passed to the logger for readability not [Object object] w/ circular reference" time="0.004">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() indicates whether or not the desired log should be printed at the current log level" name="plugin-logger #shouldPrint() indicates whether or not the desired log should be printed at the current log level" time="0.009">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() factors in log type when passed in as client" name="plugin-logger #shouldPrint() factors in log type when passed in as client" time="0.005">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() uses the WEBEX_LOG_LEVEL environment varable to control log level" name="plugin-logger #shouldPrint() uses the WEBEX_LOG_LEVEL environment varable to control log level" time="0.01">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() prefers the config specified logger.level" name="plugin-logger #shouldPrint() prefers the config specified logger.level" time="0.004">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() logs at TRACE in test environments" name="plugin-logger #shouldPrint() logs at TRACE in test environments" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() checks the developer feature toggle &quot;log-level&quot; when available" name="plugin-logger #shouldPrint() checks the developer feature toggle &quot;log-level&quot; when available" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() doesn&apos;t break if the feature toggle is set to an incorrect value" name="plugin-logger #shouldPrint() doesn&apos;t break if the feature toggle is set to an incorrect value" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #shouldPrint() defaults to &quot;error&quot; for all other users" name="plugin-logger #shouldPrint() defaults to &quot;error&quot; for all other users" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #shouldBuffer() logs info level to buffer by default" name="plugin-logger #shouldBuffer() logs info level to buffer by default" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #shouldBuffer() does not log debug level to buffer by default" name="plugin-logger #shouldBuffer() does not log debug level to buffer by default" time="0.001">
    </testcase>
    <testcase classname="plugin-logger #shouldBuffer() logs debug level to buffer if level configured" name="plugin-logger #shouldBuffer() logs debug level to buffer if level configured" time="0.001">
    </testcase>
    <testcase classname="plugin-logger #filter redacts email addresses" name="plugin-logger #filter redacts email addresses" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #filter strips auth headers from log output" name="plugin-logger #filter strips auth headers from log output" time="0.005">
    </testcase>
    <testcase classname="plugin-logger #error() proxies console.error" name="plugin-logger #error() proxies console.error" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #error() removes authorization data" name="plugin-logger #error() removes authorization data" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #warn() proxies console.warn" name="plugin-logger #warn() proxies console.warn" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #warn() removes authorization data" name="plugin-logger #warn() removes authorization data" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #log() proxies console.log" name="plugin-logger #log() proxies console.log" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #log() removes authorization data" name="plugin-logger #log() removes authorization data" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #info() proxies console.info" name="plugin-logger #info() proxies console.info" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #info() removes authorization data" name="plugin-logger #info() removes authorization data" time="0.006">
    </testcase>
    <testcase classname="plugin-logger #debug() proxies console.debug" name="plugin-logger #debug() proxies console.debug" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #debug() removes authorization data" name="plugin-logger #debug() removes authorization data" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #trace() proxies console.trace" name="plugin-logger #trace() proxies console.trace" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #trace() removes authorization data" name="plugin-logger #trace() removes authorization data" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #walkAndFilter redact Authorization" name="plugin-logger #walkAndFilter redact Authorization" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #walkAndFilter redact emails" name="plugin-logger #walkAndFilter redact emails" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #walkAndFilter redact MTID" name="plugin-logger #walkAndFilter redact MTID" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #walkAndFilter handle circular references" name="plugin-logger #walkAndFilter handle circular references" time="0.006">
    </testcase>
    <testcase classname="plugin-logger #walkAndFilter handle circular references in complex objects" name="plugin-logger #walkAndFilter handle circular references in complex objects" time="0.003">
    </testcase>
    <testcase classname="plugin-logger #formatLogs() formats mixed log types in order by default" name="plugin-logger #formatLogs() formats mixed log types in order by default" time="0.055">
    </testcase>
    <testcase classname="plugin-logger #formatLogs() formats mixed log types in order with separate buffers" name="plugin-logger #formatLogs() formats mixed log types in order with separate buffers" time="0.056">
    </testcase>
    <testcase classname="plugin-logger #formatLogs() handles only sdk logs with separate buffers" name="plugin-logger #formatLogs() handles only sdk logs with separate buffers" time="0.059">
    </testcase>
    <testcase classname="plugin-logger #formatLogs() handles only client logs with separate buffers" name="plugin-logger #formatLogs() handles only client logs with separate buffers" time="0.055">
    </testcase>
    <testcase classname="plugin-logger #logToBuffer() logs only to buffer by default" name="plugin-logger #logToBuffer() logs only to buffer by default" time="0.002">
    </testcase>
    <testcase classname="plugin-logger #logToBuffer() logs only to buffer with separate buffers" name="plugin-logger #logToBuffer() logs only to buffer with separate buffers" time="0.002">
    </testcase>
    <testcase classname="plugin-logger limit can be increased in runtime" name="plugin-logger limit can be increased in runtime" time="0.003">
    </testcase>
    <testcase classname="plugin-logger limit can be decreased in runtime" name="plugin-logger limit can be decreased in runtime" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:41" time="0.328" tests="61">
    <testcase classname="webex-core ServiceRegistry class members #hosts should be an array" name="webex-core ServiceRegistry class members #hosts should be an array" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry class members #map should only return hosts that are active/local/priority" name="webex-core ServiceRegistry class members #map should only return hosts that are active/local/priority" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #clear() should remove all hosts when called without a filter" name="webex-core ServiceRegistry #clear() should remove all hosts when called without a filter" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #clear() should remove only filtered hosts when called with a filter" name="webex-core ServiceRegistry #clear() should remove only filtered hosts when called with a filter" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #clear() should remove multiple hosts based on the provided filter" name="webex-core ServiceRegistry #clear() should remove multiple hosts based on the provided filter" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #clear() should return the removed hosts" name="webex-core ServiceRegistry #clear() should return the removed hosts" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #failed() should mark all hosts as failed when called without a filter" name="webex-core ServiceRegistry #failed() should mark all hosts as failed when called without a filter" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #failed() should mark the target hosts as failed" name="webex-core ServiceRegistry #failed() should mark the target hosts as failed" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #failed() should return the marked host" name="webex-core ServiceRegistry #failed() should return the marked host" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterActive() should return all hosts when called without params" name="webex-core ServiceRegistry #filterActive() should return all hosts when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterActive() should return only active hosts when called with true" name="webex-core ServiceRegistry #filterActive() should return only active hosts when called with true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterActive() should return only inactive hosts when active is false" name="webex-core ServiceRegistry #filterActive() should return only inactive hosts when active is false" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterCatalog() should return all hosts when called without params" name="webex-core ServiceRegistry #filterCatalog() should return all hosts when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterCatalog() should return only service hosts in the specific catalog" name="webex-core ServiceRegistry #filterCatalog() should return only service hosts in the specific catalog" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterCatalog() should return service hosts for an array of catalogs" name="webex-core ServiceRegistry #filterCatalog() should return service hosts for an array of catalogs" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterCatalog() should return only service hosts from valid catalogs" name="webex-core ServiceRegistry #filterCatalog() should return only service hosts from valid catalogs" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterLocal() should return all hosts when called without params" name="webex-core ServiceRegistry #filterLocal() should return all hosts when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterLocal() should return only local hosts when called with true" name="webex-core ServiceRegistry #filterLocal() should return only local hosts when called with true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterLocal() should return only hosts remote hosts when called with false" name="webex-core ServiceRegistry #filterLocal() should return only hosts remote hosts when called with false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterPriority() should return all hosts when called without params" name="webex-core ServiceRegistry #filterPriority() should return all hosts when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterPriority() should return only priority hosts when called with true" name="webex-core ServiceRegistry #filterPriority() should return only priority hosts when called with true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterPriority() should not return inactive hosts when called with true" name="webex-core ServiceRegistry #filterPriority() should not return inactive hosts when called with true" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterPriority() should return all hosts when called with false" name="webex-core ServiceRegistry #filterPriority() should return all hosts when called with false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterService() should return all hosts when called without params" name="webex-core ServiceRegistry #filterService() should return all hosts when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterService() should return hosts that belong to a service" name="webex-core ServiceRegistry #filterService() should return hosts that belong to a service" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterService() should return all hosts that belong to an array of services" name="webex-core ServiceRegistry #filterService() should return all hosts that belong to an array of services" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterService() should return an empty array when given an invalid service" name="webex-core ServiceRegistry #filterService() should return an empty array when given an invalid service" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterUrl() should return all hosts when called without params" name="webex-core ServiceRegistry #filterUrl() should return all hosts when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterUrl() should return only service hosts with a specific url" name="webex-core ServiceRegistry #filterUrl() should return only service hosts with a specific url" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterUrl() should return service hosts for an array of urls" name="webex-core ServiceRegistry #filterUrl() should return service hosts for an array of urls" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #filterUrl() should return an empty array when given an invalid url" name="webex-core ServiceRegistry #filterUrl() should return an empty array when given an invalid url" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should call the &apos;filterActive()&apos; method with params" name="webex-core ServiceRegistry #find() should call the &apos;filterActive()&apos; method with params" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should call the &apos;filterCatalog()&apos; method with params" name="webex-core ServiceRegistry #find() should call the &apos;filterCatalog()&apos; method with params" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should call the &apos;filterCluster()&apos; method with params" name="webex-core ServiceRegistry #find() should call the &apos;filterCluster()&apos; method with params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should call the &apos;filterLocal()&apos; method with params" name="webex-core ServiceRegistry #find() should call the &apos;filterLocal()&apos; method with params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should call the &apos;filterPriority()&apos; method with params" name="webex-core ServiceRegistry #find() should call the &apos;filterPriority()&apos; method with params" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should call the &apos;filterService()&apos; method with params" name="webex-core ServiceRegistry #find() should call the &apos;filterService()&apos; method with params" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should call the &apos;filterUrl()&apos; method with params" name="webex-core ServiceRegistry #find() should call the &apos;filterUrl()&apos; method with params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should return an array of filtered hosts" name="webex-core ServiceRegistry #find() should return an array of filtered hosts" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #find() should return all of the hosts when called without params" name="webex-core ServiceRegistry #find() should return all of the hosts when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #load() should amend all provided hosts to the hosts array" name="webex-core ServiceRegistry #load() should amend all provided hosts to the hosts array" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #load() should ignore unloadable hosts" name="webex-core ServiceRegistry #load() should ignore unloadable hosts" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #load() should return itself" name="webex-core ServiceRegistry #load() should return itself" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #replaced() should mark all hosts as replaced when called without params" name="webex-core ServiceRegistry #replaced() should mark all hosts as replaced when called without params" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #replaced() should mark the target hosts as replaced" name="webex-core ServiceRegistry #replaced() should mark the target hosts as replaced" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #replaced() should return the marked host" name="webex-core ServiceRegistry #replaced() should return the marked host" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #reset() should reset all hosts when called withour a filter" name="webex-core ServiceRegistry #reset() should reset all hosts when called withour a filter" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #reset() should reset the failed status of the target host" name="webex-core ServiceRegistry #reset() should reset the failed status of the target host" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #reset() should not reset the failed status of non-targetted hosts" name="webex-core ServiceRegistry #reset() should not reset the failed status of non-targetted hosts" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #reset() should not reset the replaced status of hosts" name="webex-core ServiceRegistry #reset() should not reset the replaced status of hosts" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry #reset() should return the reset host" name="webex-core ServiceRegistry #reset() should return the reset host" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapCatalogName() should map an index to the matching name" name="webex-core ServiceRegistry static methods #mapCatalogName() should map an index to the matching name" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapCatalogName() should map an index to the matching index" name="webex-core ServiceRegistry static methods #mapCatalogName() should map an index to the matching index" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapCatalogName() should map a name to the matching index" name="webex-core ServiceRegistry static methods #mapCatalogName() should map a name to the matching index" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapCatalogName() should map a name to the matching name" name="webex-core ServiceRegistry static methods #mapCatalogName() should map a name to the matching name" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapCatalogName() should return undefined if an index doesn&apos;t exist" name="webex-core ServiceRegistry static methods #mapCatalogName() should return undefined if an index doesn&apos;t exist" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapCatalogName() should return undefined if a name doesn&apos;t exist" name="webex-core ServiceRegistry static methods #mapCatalogName() should return undefined if a name doesn&apos;t exist" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapRemoteCatalog() should return an array" name="webex-core ServiceRegistry static methods #mapRemoteCatalog() should return an array" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapRemoteCatalog() should include all provided hosts" name="webex-core ServiceRegistry static methods #mapRemoteCatalog() should include all provided hosts" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapRemoteCatalog() should not map using an invalid catalog name" name="webex-core ServiceRegistry static methods #mapRemoteCatalog() should not map using an invalid catalog name" time="0">
    </testcase>
    <testcase classname="webex-core ServiceRegistry static methods #mapRemoteCatalog() should map catalog indexes to catalog names" name="webex-core ServiceRegistry static methods #mapRemoteCatalog() should map catalog indexes to catalog names" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-mercury" errors="0" failures="0" skipped="1" timestamp="2024-04-16T15:14:40" time="0.635" tests="20">
    <testcase classname="plugin-mercury Mercury Events when connected emits the `online` event" name="plugin-mercury Mercury Events when connected emits the `online` event" time="0.016">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when disconnected emits the `offline` event" name="plugin-mercury Mercury Events when disconnected emits the `offline` event" time="0.011">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when disconnected when reconnected emits the `online` event" name="plugin-mercury Mercury Events when disconnected when reconnected emits the `online` event" time="0.014">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when `mercury.buffer_state` is received gets emitted" name="plugin-mercury Mercury Events when `mercury.buffer_state` is received gets emitted" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `idle` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `idle` is received takes the reconnect action" time="0.008">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `done (forced)` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `done (forced)` is received takes the reconnect action" time="0.009">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `pong not received` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `pong not received` is received takes the reconnect action" time="0.008">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `pong mismatch` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` and reason `pong mismatch` is received takes the reconnect action" time="0.009">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` is received takes the close action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1000` is received takes the close action" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1003` is received takes the close action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1003` is received takes the close action" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1001` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1001` is received takes the reconnect action" time="0.013">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1005` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1005` is received takes the reconnect action" time="0.011">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1006` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1006` is received takes the reconnect action" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1011` is received takes the reconnect action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `1011` is received takes the reconnect action" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `4000` is received takes the replace action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event with code `4000` is received takes the replace action" time="0.007">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a CloseEvent is received when an event undefined is received takes the close action" name="plugin-mercury Mercury Events when a CloseEvent is received when an event undefined is received takes the close action" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a MessageEvent is received processes the Event via any autowired event handlers" name="plugin-mercury Mercury Events when a MessageEvent is received processes the Event via any autowired event handlers" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a MessageEvent is received emits the Mercury envelope" name="plugin-mercury Mercury Events when a MessageEvent is received emits the Mercury envelope" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a MessageEvent is received emits the Mercury envelope named by the Mercury event&apos;s eventType" name="plugin-mercury Mercury Events when a MessageEvent is received emits the Mercury envelope named by the Mercury event&apos;s eventType" time="0.007">
    </testcase>
    <testcase classname="plugin-mercury Mercury Events when a sequence number is skipped emits an event" name="plugin-mercury Mercury Events when a sequence number is skipped emits an event" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:40" time="0.624" tests="26">
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() does not replace the auth header if one has been provided" name="webex-core Interceptors AuthInterceptor #onRequest() does not replace the auth header if one has been provided" time="0.011">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() does not add an auth header if undefined has been provided" name="webex-core Interceptors AuthInterceptor #onRequest() does not add an auth header if undefined has been provided" time="0.004">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() does not add an auth header if null has been provided" name="webex-core Interceptors AuthInterceptor #onRequest() does not add an auth header if null has been provided" time="0.004">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() does not add an auth header if false has been provided" name="webex-core Interceptors AuthInterceptor #onRequest() does not add an auth header if false has been provided" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has not been loaded does not add the auth header to hydra requests" name="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has not been loaded does not add the auth header to hydra requests" time="0.004">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has not been loaded does not add the auth header to u2c requests" name="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has not been loaded does not add the auth header to u2c requests" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded adds the header to hydra requests" name="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded adds the header to hydra requests" time="0.009">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded adds an auth header to uris that are in the service catalog" name="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded adds an auth header to uris that are in the service catalog" time="0.004">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded adds an auth header to services that are in the service catalog" name="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded adds an auth header to services that are in the service catalog" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded does not add an auth header to uris not in the service catalog" name="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded does not add an auth header to uris not in the service catalog" time="0.007">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded does not add an auth header to non-existant services" name="webex-core Interceptors AuthInterceptor #onRequest() when the services plugin has been loaded does not add an auth header to non-existant services" time="0.01">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false when services plugin does not exist" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false when services plugin does not exist" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true when the u2c service is specified via service" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true when the u2c service is specified via service" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false when the u2c limited service is used via uri" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false when the u2c limited service is used via uri" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true if the service exists in catalog via service" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true if the service exists in catalog via service" time="0.006">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true if the service exists in catalog via uri" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true if the service exists in catalog via uri" time="0.002">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false if that `addAuthHeader` is set to false" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false if that `addAuthHeader` is set to false" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false if `validateDomains` is set to false" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false if `validateDomains` is set to false" time="0.002">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true with an allowed domain uri" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to true with an allowed domain uri" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false with a non-allowed uri" name="webex-core Interceptors AuthInterceptor #requiresCredentials() resolves to false with a non-allowed uri" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() should return true if domain exists using  isAllowedDomainUrl()" name="webex-core Interceptors AuthInterceptor #requiresCredentials() should return true if domain exists using  isAllowedDomainUrl()" time="0.004">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() should return true when called `requiresCredentials` with valid url" name="webex-core Interceptors AuthInterceptor #requiresCredentials() should return true when called `requiresCredentials` with valid url" time="0.004">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #requiresCredentials() should call waitForService()" name="webex-core Interceptors AuthInterceptor #requiresCredentials() should call waitForService()" time="0.003">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onResponseError() when the server responds with 401 refreshes the access token and replays the request" name="webex-core Interceptors AuthInterceptor #onResponseError() when the server responds with 401 refreshes the access token and replays the request" time="0.014">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onResponseError() when the server responds with 401 when the access token is not refreshable responds with the original error" name="webex-core Interceptors AuthInterceptor #onResponseError() when the server responds with 401 when the access token is not refreshable responds with the original error" time="0.004">
    </testcase>
    <testcase classname="webex-core Interceptors AuthInterceptor #onResponseError() when the server responds with 401 does not refresh if shouldRefreshAccessToken was false" name="webex-core Interceptors AuthInterceptor #onResponseError() when the server responds with 401 does not refresh if shouldRefreshAccessToken was false" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="internal-plugin-metrics" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:41" time="0.474" tests="81">
    <testcase classname="internal-plugin-metrics clearEmptyKeysRecursively should clear empty objects and empty nested objects recursively" name="internal-plugin-metrics clearEmptyKeysRecursively should clear empty objects and empty nested objects recursively" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics clearEmptyKeysRecursively should not modify non-empty objects and arrays" name="internal-plugin-metrics clearEmptyKeysRecursively should not modify non-empty objects and arrays" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics clearEmptyKeysRecursively should not modify non-object and non-array values" name="internal-plugin-metrics clearEmptyKeysRecursively should not modify non-object and non-array values" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics clearEmptyKeysRecursively should handle nested empty objects and arrays" name="internal-plugin-metrics clearEmptyKeysRecursively should handle nested empty objects and arrays" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics clearEmptyKeysRecursively should handle an empty input object" name="internal-plugin-metrics clearEmptyKeysRecursively should handle an empty input object" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isLocusServiceErrorCode for code 10000 returns the correct result" name="internal-plugin-metrics isLocusServiceErrorCode for code 10000 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isLocusServiceErrorCode for code 2400000 returns the correct result" name="internal-plugin-metrics isLocusServiceErrorCode for code 2400000 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isLocusServiceErrorCode for code 2400000 returns the correct result" name="internal-plugin-metrics isLocusServiceErrorCode for code 2400000 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isLocusServiceErrorCode for code 2400001 returns the correct result" name="internal-plugin-metrics isLocusServiceErrorCode for code 2400001 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isLocusServiceErrorCode for code 2400001 returns the correct result" name="internal-plugin-metrics isLocusServiceErrorCode for code 2400001 returns the correct result" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics isLocusServiceErrorCode for code 240000 returns the correct result" name="internal-plugin-metrics isLocusServiceErrorCode for code 240000 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isLocusServiceErrorCode for code 14000000 returns the correct result" name="internal-plugin-metrics isLocusServiceErrorCode for code 14000000 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" name="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" name="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" name="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" name="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isMeetingInfoServiceError for rawError 2400001 returns the correct result" name="internal-plugin-metrics isMeetingInfoServiceError for rawError 2400001 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isMeetingInfoServiceError for rawError 2400001 returns the correct result" name="internal-plugin-metrics isMeetingInfoServiceError for rawError 2400001 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" name="internal-plugin-metrics isMeetingInfoServiceError for rawError [object Object] returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isNetworkError for rawError [object Object] returns the correct result" name="internal-plugin-metrics isNetworkError for rawError [object Object] returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isNetworkError for rawError NetworkOrCORSError: {}
undefined https://example.com
WEBEX_TRACKING_ID: undefined
 returns the correct result" name="internal-plugin-metrics isNetworkError for rawError NetworkOrCORSError: {}
undefined https://example.com
WEBEX_TRACKING_ID: undefined
 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isNetworkError for rawError Unauthorized: {}
undefined https://example.com
WEBEX_TRACKING_ID: undefined
 returns the correct result" name="internal-plugin-metrics isNetworkError for rawError Unauthorized: {}
undefined https://example.com
WEBEX_TRACKING_ID: undefined
 returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isUnauthorizedError for unauthorized rawError returns the correct result" name="internal-plugin-metrics isUnauthorizedError for unauthorized rawError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isUnauthorizedError for network or cors rawError returns the correct result" name="internal-plugin-metrics isUnauthorizedError for network or cors rawError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isUnauthorizedError for other rawError returns the correct result" name="internal-plugin-metrics isUnauthorizedError for other rawError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isSdpOfferCreationError for isSdpOfferCreationError rawError returns the correct result" name="internal-plugin-metrics isSdpOfferCreationError for isSdpOfferCreationError rawError returns the correct result" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics isSdpOfferCreationError for generic error rawError returns the correct result" name="internal-plugin-metrics isSdpOfferCreationError for generic error rawError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError PermissionDeniedError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError PermissionDeniedError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError PermissionDeniedErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError PermissionDeniedErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError NotAllowedError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError NotAllowedError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError NotAllowedErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError NotAllowedErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError NotReadableError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError NotReadableError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError NotReadableErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError NotReadableErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError AbortError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError AbortError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError AbortErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError AbortErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError NotFoundError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError NotFoundError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError NotFoundErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError NotFoundErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError OverconstrainedError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError OverconstrainedError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError OverconstrainedErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError OverconstrainedErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError SecurityError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError SecurityError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError SecurityErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError SecurityErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError TypeError returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError TypeError returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError TypeErrors returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError TypeErrors returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError  returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError  returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError SomethingElse returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError SomethingElse returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics isBrowserMediaErrorName for rawError [object Object] returns the correct result" name="internal-plugin-metrics isBrowserMediaErrorName for rawError [object Object] returns the correct result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics getBuildType returns expected result for https://localhost" name="internal-plugin-metrics getBuildType returns expected result for https://localhost" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics getBuildType returns expected result for https://127.0.0.1" name="internal-plugin-metrics getBuildType returns expected result for https://127.0.0.1" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics getBuildType returns expected result for https://web.webex.com" name="internal-plugin-metrics getBuildType returns expected result for https://web.webex.com" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics getBuildType returns expected result for https://web.webex.com" name="internal-plugin-metrics getBuildType returns expected result for https://web.webex.com" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics getBuildType returns &quot;test&quot; for NODE_ENV &quot;foo&quot;" name="internal-plugin-metrics getBuildType returns &quot;test&quot; for NODE_ENV &quot;foo&quot;" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics getBuildType returns &quot;test&quot; for NODE_ENV &quot;production&quot; and markAsTestEvent = true" name="internal-plugin-metrics getBuildType returns &quot;test&quot; for NODE_ENV &quot;production&quot; and markAsTestEvent = true" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.exit.app" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.exit.app" time="0.002">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.login.end" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.login.end" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.webexapp.launched" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.webexapp.launched" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.interstitial-window.launched" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.interstitial-window.launched" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.call.initiated" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.call.initiated" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.locus.join.response" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.locus.join.response" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.ice.end" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.ice.end" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.media.rx.start" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.media.rx.start" time="0.002">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.media-engine.ready" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.media-engine.ready" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.mediaquality.event" name="internal-plugin-metrics prepareDiagnosticMetricItem returns expected result for client.mediaquality.event" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics prepareDiagnosticMetricItem calls getBuildType correctly" name="internal-plugin-metrics prepareDiagnosticMetricItem calls getBuildType correctly" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics setMetricTimings returns expected options" name="internal-plugin-metrics setMetricTimings returns expected options" time="0.001">
    </testcase>
    <testcase classname="internal-plugin-metrics setMetricTimings returns expected options for multiple metrics" name="internal-plugin-metrics setMetricTimings returns expected options for multiple metrics" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics setMetricTimings returns expected options when json is falsey" name="internal-plugin-metrics setMetricTimings returns expected options when json is falsey" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics setMetricTimings does not throw when there is no body" name="internal-plugin-metrics setMetricTimings does not throw when there is no body" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics setMetricTimings does not throw when body is empty" name="internal-plugin-metrics setMetricTimings does not throw when body is empty" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for 1.2.3" name="internal-plugin-metrics extractVersionMetadata returns expected result for 1.2.3" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for 0.0.1" name="internal-plugin-metrics extractVersionMetadata returns expected result for 0.0.1" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for 0.0.0" name="internal-plugin-metrics extractVersionMetadata returns expected result for 0.0.0" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for 1.2" name="internal-plugin-metrics extractVersionMetadata returns expected result for 1.2" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for 1" name="internal-plugin-metrics extractVersionMetadata returns expected result for 1" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for foo" name="internal-plugin-metrics extractVersionMetadata returns expected result for foo" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for 1.foo" name="internal-plugin-metrics extractVersionMetadata returns expected result for 1.foo" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for foo.1" name="internal-plugin-metrics extractVersionMetadata returns expected result for foo.1" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics extractVersionMetadata returns expected result for foo.bar" name="internal-plugin-metrics extractVersionMetadata returns expected result for foo.bar" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" name="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" name="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" name="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" time="0">
    </testcase>
    <testcase classname="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" name="internal-plugin-metrics generateClientErrorCodeForIceFailure returns expected result" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-device" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:41" time="0.444" tests="30">
    <testcase classname="plugin-device feature-model #constructor() when the feature includes a &apos;lastModified&apos; property should assign value attributes to properties" name="plugin-device feature-model #constructor() when the feature includes a &apos;lastModified&apos; property should assign value attributes to properties" time="0.001">
    </testcase>
    <testcase classname="plugin-device feature-model #constructor() when the feature includes a &apos;lastModified&apos; property should assign the &apos;lastModified&apos; value as a &apos;Date&apos;" name="plugin-device feature-model #constructor() when the feature includes a &apos;lastModified&apos; property should assign the &apos;lastModified&apos; value as a &apos;Date&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #constructor() when the feature excludes a &apos;lastModified&apos; property should assign value attributes to properties" name="plugin-device feature-model #constructor() when the feature excludes a &apos;lastModified&apos; property should assign value attributes to properties" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #constructor() when the feature excludes a &apos;lastModified&apos; property should not assign the &apos;lastModified&apos; value" name="plugin-device feature-model #constructor() when the feature excludes a &apos;lastModified&apos; property should not assign the &apos;lastModified&apos; value" time="0.001">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() should return an empty object when the model is not defined" name="plugin-device feature-model #parse() should return an empty object when the model is not defined" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a number should set the value to a instance of number" name="plugin-device feature-model #parse() when the model is defined when the value is a number should set the value to a instance of number" time="0.001">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a number should set the type to &apos;number&apos;" name="plugin-device feature-model #parse() when the model is defined when the value is a number should set the type to &apos;number&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a number should set the model value to the equivalent Number value" name="plugin-device feature-model #parse() when the model is defined when the value is a number should set the model value to the equivalent Number value" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a true boolean should set the value to a boolean true" name="plugin-device feature-model #parse() when the model is defined when the value is a true boolean should set the value to a boolean true" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a true boolean should set the type to &apos;boolean&apos;" name="plugin-device feature-model #parse() when the model is defined when the value is a true boolean should set the type to &apos;boolean&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a True boolean should set the value to a boolean true" name="plugin-device feature-model #parse() when the model is defined when the value is a True boolean should set the value to a boolean true" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a True boolean should set the type to &apos;boolean&apos;" name="plugin-device feature-model #parse() when the model is defined when the value is a True boolean should set the type to &apos;boolean&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a false string should set the value to a boolean false" name="plugin-device feature-model #parse() when the model is defined when the value is a false string should set the value to a boolean false" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a false string should set the type to &apos;boolean&apos;" name="plugin-device feature-model #parse() when the model is defined when the value is a false string should set the type to &apos;boolean&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a False string should set the value to a boolean false" name="plugin-device feature-model #parse() when the model is defined when the value is a False string should set the value to a boolean false" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a False string should set the type to &apos;boolean&apos;" name="plugin-device feature-model #parse() when the model is defined when the value is a False string should set the type to &apos;boolean&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a string should set the value to a instance of string" name="plugin-device feature-model #parse() when the model is defined when the value is a string should set the value to a instance of string" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a string should set the type to &apos;string&apos;" name="plugin-device feature-model #parse() when the model is defined when the value is a string should set the type to &apos;string&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the value is a string should set the model value to the equivalent string value" name="plugin-device feature-model #parse() when the model is defined when the value is a string should set the model value to the equivalent string value" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the val is not a number, boolean or string should set the value to the provided val property" name="plugin-device feature-model #parse() when the model is defined when the val is not a number, boolean or string should set the value to the provided val property" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when the val is not a number, boolean or string should set the type to &apos;string&apos;" name="plugin-device feature-model #parse() when the model is defined when the val is not a number, boolean or string should set the type to &apos;string&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when there is no value should set the value to undefined" name="plugin-device feature-model #parse() when the model is defined when there is no value should set the value to undefined" time="0.001">
    </testcase>
    <testcase classname="plugin-device feature-model #parse() when the model is defined when there is no value should set the type to &apos;string&apos;" name="plugin-device feature-model #parse() when the model is defined when there is no value should set the type to &apos;string&apos;" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #serialize() when the feature includes a &apos;lastModified&apos; property should assign value attributes to properties" name="plugin-device feature-model #serialize() when the feature includes a &apos;lastModified&apos; property should assign value attributes to properties" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #serialize() when the feature includes a &apos;lastModified&apos; property should assign the &apos;lastModified&apos; value as a &apos;string&apos;" name="plugin-device feature-model #serialize() when the feature includes a &apos;lastModified&apos; property should assign the &apos;lastModified&apos; value as a &apos;string&apos;" time="0.002">
    </testcase>
    <testcase classname="plugin-device feature-model #serialize() when the feature excludes a &apos;lastModified&apos; property should assign value attributes to properties" name="plugin-device feature-model #serialize() when the feature excludes a &apos;lastModified&apos; property should assign value attributes to properties" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #serialize() when the feature excludes a &apos;lastModified&apos; property should not assign the &apos;lastModified&apos; value" name="plugin-device feature-model #serialize() when the feature excludes a &apos;lastModified&apos; property should not assign the &apos;lastModified&apos; value" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #set() when setting only a single key should assign the value to the appropriate key" name="plugin-device feature-model #set() when setting only a single key should assign the value to the appropriate key" time="0.001">
    </testcase>
    <testcase classname="plugin-device feature-model #set() when setting only a single key should not change other key values" name="plugin-device feature-model #set() when setting only a single key should not change other key values" time="0">
    </testcase>
    <testcase classname="plugin-device feature-model #set() when setting all properties should assign all values" name="plugin-device feature-model #set() when setting all properties should assign all values" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-lyra" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:41" time="0.431" tests="1">
    <testcase classname="plugin-lyra lyra #getAdvertisedEndpoint() sends GET request to proximity" name="plugin-lyra lyra #getAdvertisedEndpoint() sends GET request to proximity" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Request shim" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:41" time="0.243" tests="1">
    <testcase classname="Request shim #setAuth() sets auth header" name="Request shim #setAuth() sets auth header" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="commonn timers" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:42" time="1.426" tests="13">
    <testcase classname="commonn timers safeSetTimeout should call the callback when the timer expired" name="commonn timers safeSetTimeout should call the callback when the timer expired" time="0.061">
    </testcase>
    <testcase classname="commonn timers safeSetInterval should start in an interval" name="commonn timers safeSetInterval should start in an interval" time="0.001">
    </testcase>
    <testcase classname="commonn timers Timer start method should call the callback function when the timer expired" name="commonn timers Timer start method should call the callback function when the timer expired" time="0.001">
    </testcase>
    <testcase classname="commonn timers Timer start method should throw error when start called more than once" name="commonn timers Timer start method should throw error when start called more than once" time="0.002">
    </testcase>
    <testcase classname="commonn timers Timer start method should throw error when start called after reset" name="commonn timers Timer start method should throw error when start called after reset" time="0.001">
    </testcase>
    <testcase classname="commonn timers Timer start method should throw error when start called after timer canceled" name="commonn timers Timer start method should throw error when start called after timer canceled" time="0">
    </testcase>
    <testcase classname="commonn timers Timer start method should throw error when start called after timer finished" name="commonn timers Timer start method should throw error when start called after timer finished" time="0.001">
    </testcase>
    <testcase classname="commonn timers Timer reset method should reset the timer" name="commonn timers Timer reset method should reset the timer" time="0.002">
    </testcase>
    <testcase classname="commonn timers Timer reset method should throw error when reset called before start" name="commonn timers Timer reset method should throw error when reset called before start" time="0.001">
    </testcase>
    <testcase classname="commonn timers Timer reset method should throw error when reset called after cancel" name="commonn timers Timer reset method should throw error when reset called after cancel" time="0.002">
    </testcase>
    <testcase classname="commonn timers Timer cancel method should stop the timer" name="commonn timers Timer cancel method should stop the timer" time="0.001">
    </testcase>
    <testcase classname="commonn timers Timer cancel method should throw error when cancel called before start" name="commonn timers Timer cancel method should throw error when cancel called before start" time="0.001">
    </testcase>
    <testcase classname="commonn timers Timer cancel method should throw error when cancel called more than once" name="commonn timers Timer cancel method should throw error when cancel called more than once" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="plugin-lyra" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:41" time="1.842" tests="2">
    <testcase classname="plugin-lyra device #putAudioState requires audioState.deviceUrl" name="plugin-lyra device #putAudioState requires audioState.deviceUrl" time="0.001">
    </testcase>
    <testcase classname="plugin-lyra device #setVolume defaults to level 0" name="plugin-lyra device #setVolume defaults to level 0" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="plugin-metrics" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:42" time="2.219" tests="8">
    <testcase classname="plugin-metrics Metrics #submit() submits a metric" name="plugin-metrics Metrics #submit() submits a metric" time="0.017">
    </testcase>
    <testcase classname="plugin-metrics Metrics #getClientMetricsPayload() returns the expected payload" name="plugin-metrics Metrics #getClientMetricsPayload() returns the expected payload" time="0.046">
    </testcase>
    <testcase classname="plugin-metrics Metrics #getClientMetricsPayload() throws when no event name is specified" name="plugin-metrics Metrics #getClientMetricsPayload() throws when no event name is specified" time="0.022">
    </testcase>
    <testcase classname="plugin-metrics Metrics #submitClientMetrics() before login posts pre-login metric" name="plugin-metrics Metrics #submitClientMetrics() before login posts pre-login metric" time="0.029">
    </testcase>
    <testcase classname="plugin-metrics Metrics #submitClientMetrics() after login submits a metric to clientmetrics" name="plugin-metrics Metrics #submitClientMetrics() after login submits a metric to clientmetrics" time="0.063">
    </testcase>
    <testcase classname="plugin-metrics Metrics #submitClientMetrics() after login throws error if no metric name is given" name="plugin-metrics Metrics #submitClientMetrics() after login throws error if no metric name is given" time="0.004">
    </testcase>
    <testcase classname="plugin-metrics Metrics #postPreLoginMetric() returns an HttpResponse object" name="plugin-metrics Metrics #postPreLoginMetric() returns an HttpResponse object" time="0.007">
    </testcase>
    <testcase classname="plugin-metrics Metrics #aliasUser() returns an HttpResponse object" name="plugin-metrics Metrics #aliasUser() returns an HttpResponse object" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="getBowserSerial()" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:43" time="0.801" tests="3">
    <testcase classname="getBowserSerial() should provide the parsed bowser user agent when available" name="getBowserSerial() should provide the parsed bowser user agent when available" time="0.002">
    </testcase>
    <testcase classname="getBowserSerial() should provide an error message when the user agent is not available" name="getBowserSerial() should provide an error message when the user agent is not available" time="0.001">
    </testcase>
    <testcase classname="getBowserSerial() should provide an error message object when bowser.getParser() fails" name="getBowserSerial() should provide an error message object when bowser.getParser() fails" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:43" time="0.968" tests="14">
    <testcase classname="webex-core ServiceInterceptor #generateUri() should remove all trailing slashes" name="webex-core ServiceInterceptor #generateUri() should remove all trailing slashes" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #generateUri() should combine the service url and the resource" name="webex-core ServiceInterceptor #generateUri() should combine the service url and the resource" time="0.006">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #normalizeOptions() when the api parameter is defined should assign the service parameter the api value" name="webex-core ServiceInterceptor #normalizeOptions() when the api parameter is defined should assign the service parameter the api value" time="0.005">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #normalizeOptions() when the api parameter is defined when the service parameter is defined should maintain the service parameter" name="webex-core ServiceInterceptor #normalizeOptions() when the api parameter is defined when the service parameter is defined should maintain the service parameter" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #onRequest() when the uri parameter is defined should return the options" name="webex-core ServiceInterceptor #onRequest() when the uri parameter is defined should return the options" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined should normalize the options" name="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined should normalize the options" time="0.003">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined should validate the options" name="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined should validate the options" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined should attempt to collect the service url" name="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined should attempt to collect the service url" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined when the service url was collected successfully should attempt to generate the full uri" name="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined when the service url was collected successfully should attempt to generate the full uri" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined when the service url was collected successfully should return a resolved promise" name="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined when the service url was collected successfully should return a resolved promise" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined when the service url was not collected successfully should return a rejected promise" name="webex-core ServiceInterceptor #onRequest() when the uri parameter is not defined when the service url was not collected successfully should return a rejected promise" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #validateOptions() when the resource parameter is not defined should throw an error" name="webex-core ServiceInterceptor #validateOptions() when the resource parameter is not defined should throw an error" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #validateOptions() when the service parameter is not defined should throw an error" name="webex-core ServiceInterceptor #validateOptions() when the service parameter is not defined should throw an error" time="0">
    </testcase>
    <testcase classname="webex-core ServiceInterceptor #validateOptions() when the service and resource parameters are defined should not throw an error" name="webex-core ServiceInterceptor #validateOptions() when the service and resource parameters are defined should not throw an error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Webex" errors="0" failures="0" skipped="3" timestamp="2024-04-16T15:14:41" time="0.537" tests="48">
    <testcase classname="Webex #logger exists" name="Webex #logger exists" time="0.016">
    </testcase>
    <testcase classname="Webex .config.fedramp exists" name="Webex .config.fedramp exists" time="0.003">
    </testcase>
    <testcase classname="Webex .version exists" name="Webex .version exists" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Webex #version exists" name="Webex #version exists" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Webex #credentials #version exists" name="Webex #credentials #version exists" time="0">
      <skipped/>
    </testcase>
    <testcase classname="Webex #request exists" name="Webex #request exists" time="0.006">
    </testcase>
    <testcase classname="Webex #prepareFetchOptions exists" name="Webex #prepareFetchOptions exists" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() initializes without arguments" name="Webex #initialize() initializes without arguments" time="0.004">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;&quot;" time="0.004">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;&quot;" time="0.009">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;access_token&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;access_token&quot;" time="0.006">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;access_token&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;access_token&quot;" time="0.005">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken&quot;" time="0.005">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken&quot;" time="0.007">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;authorization&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;authorization&quot;" time="0.006">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization&quot;" time="0.004">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;authorization.supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;authorization.supertoken.access_token&quot;" time="0.005">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.access_token&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.access_token&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.access_token&quot;" time="0.005">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.supertoken&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.supertoken&quot;" time="0.004">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.supertoken&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.supertoken&quot;" time="0.004">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization&quot;" time="0.005">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization.access_token&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization.access_token&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization.supertoken&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization.supertoken&quot;" time="0.002">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization.supertoken&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization.supertoken&quot;" time="0.004">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization.supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;ST&quot; at path &quot;credentials.authorization.supertoken.access_token&quot;" time="0.002">
    </testcase>
    <testcase classname="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization.supertoken.access_token&quot;" name="Webex #initialize() accepts token string &quot;Bearer ST&quot; at path &quot;credentials.authorization.supertoken.access_token&quot;" time="0.003">
    </testcase>
    <testcase classname="Webex initializes with Bearer Token initializes with a correctly formatted token" name="Webex initializes with Bearer Token initializes with a correctly formatted token" time="0.003">
    </testcase>
    <testcase classname="Webex initializes with Bearer Token initializes and removes extra space from a token that has an extra space after Bearer" name="Webex initializes with Bearer Token initializes and removes extra space from a token that has an extra space after Bearer" time="0.005">
    </testcase>
    <testcase classname="Webex initializes with Bearer Token initializes and adds a space after Bearer from a token that has no spaces after Bearer" name="Webex initializes with Bearer Token initializes and adds a space after Bearer from a token that has no spaces after Bearer" time="0.004">
    </testcase>
    <testcase classname="Webex initializes with Bearer Token initializes and trims whitespace from a token that has spaces before Bearer and after token" name="Webex initializes with Bearer Token initializes and trims whitespace from a token that has spaces before Bearer and after token" time="0.003">
    </testcase>
    <testcase classname="Webex initializes with Bearer Token initializes and removes extra space and trims whitespace from a token that has spaces before and after Bearer and after token" name="Webex initializes with Bearer Token initializes and removes extra space and trims whitespace from a token that has spaces before and after Bearer and after token" time="0.004">
    </testcase>
    <testcase classname="Webex initializes with Bearer Token initializes and trims whitspace and adds a space after Bearer from a token that has spaces before Bearer and after token and no spaces after Bearer" name="Webex initializes with Bearer Token initializes and trims whitspace and adds a space after Bearer from a token that has spaces before Bearer and after token and no spaces after Bearer" time="0.005">
    </testcase>
    <testcase classname="Webex #setConfig() updates the config" name="Webex #setConfig() updates the config" time="0.004">
    </testcase>
    <testcase classname="Webex emits the `loaded` event when the storage layer has loaded all data" name="Webex emits the `loaded` event when the storage layer has loaded all data" time="0.031">
    </testcase>
    <testcase classname="Webex emits the ready event when the storage layer has loaded and all plugins signal ready" name="Webex emits the ready event when the storage layer has loaded and all plugins signal ready" time="0.012">
    </testcase>
    <testcase classname="Webex allows plugins to control ready status" name="Webex allows plugins to control ready status" time="0.019">
    </testcase>
  </testsuite>
  <testsuite name="plugin-board" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:44" time="1.146" tests="8">
    <testcase classname="plugin-board encryption #decryptContents calls decryptSingleContent when type is not image" name="plugin-board encryption #decryptContents calls decryptSingleContent when type is not image" time="0.002">
    </testcase>
    <testcase classname="plugin-board encryption #decryptContents calls decryptSingleFileContent when type is FILE" name="plugin-board encryption #decryptContents calls decryptSingleFileContent when type is FILE" time="0.001">
    </testcase>
    <testcase classname="plugin-board encryption #decryptContents does not require payload when type is FILE" name="plugin-board encryption #decryptContents does not require payload when type is FILE" time="0.004">
    </testcase>
    <testcase classname="plugin-board encryption #decryptContents decrypts FILE metadata displayName" name="plugin-board encryption #decryptContents decrypts FILE metadata displayName" time="0.001">
    </testcase>
    <testcase classname="plugin-board encryption #decryptContents assigns FILE payload metadata to decrypted file" name="plugin-board encryption #decryptContents assigns FILE payload metadata to decrypted file" time="0.001">
    </testcase>
    <testcase classname="plugin-board encryption #encryptContents calls encryptSingleContent when type is not image" name="plugin-board encryption #encryptContents calls encryptSingleContent when type is not image" time="0">
    </testcase>
    <testcase classname="plugin-board encryption #encryptContents calls encryptText and encryptScr when scr is found in content" name="plugin-board encryption #encryptContents calls encryptText and encryptScr when scr is found in content" time="0.001">
    </testcase>
    <testcase classname="plugin-board encryption #encryptContents sets the device to config deviceType" name="plugin-board encryption #encryptContents sets the device to config deviceType" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-device" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:45" time="0.706" tests="2">
    <testcase classname="plugin-device feature-collection #mainIndex should have its index set to &apos;key&apos;" name="plugin-device feature-collection #mainIndex should have its index set to &apos;key&apos;" time="0.001">
    </testcase>
    <testcase classname="plugin-device feature-collection #model should have its model set to the &apos;FeatureModel&apos; class" name="plugin-device feature-collection #model should have its model set to the &apos;FeatureModel&apos; class" time="0">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:45" time="1.058" tests="35">
    <testcase classname="webex-core ServiceHost #constructor() should attempt to validate services" name="webex-core ServiceHost #constructor() should attempt to validate services" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #active should return false when the host has failed" name="webex-core ServiceHost class members #active should return false when the host has failed" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #active should return false when the host has been replaced" name="webex-core ServiceHost class members #active should return false when the host has been replaced" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #active should return true when the host is active" name="webex-core ServiceHost class members #active should return true when the host is active" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #catalog should match the parameter value" name="webex-core ServiceHost class members #catalog should match the parameter value" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #defaultUri should match the parameter value" name="webex-core ServiceHost class members #defaultUri should match the parameter value" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #failed should automatically set the value to false" name="webex-core ServiceHost class members #failed should automatically set the value to false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #hostGroup should match the parameter value" name="webex-core ServiceHost class members #hostGroup should match the parameter value" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #id should match the parameter value" name="webex-core ServiceHost class members #id should match the parameter value" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #local should return true when the uri includes the host group" name="webex-core ServiceHost class members #local should return true when the uri includes the host group" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #local should return true when the uri excludes the host group" name="webex-core ServiceHost class members #local should return true when the uri excludes the host group" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #priority should match the parameter value" name="webex-core ServiceHost class members #priority should match the parameter value" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #replaced should automatically set the value to false" name="webex-core ServiceHost class members #replaced should automatically set the value to false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #service should return the service" name="webex-core ServiceHost class members #service should return the service" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #uri should match the parameter value" name="webex-core ServiceHost class members #uri should match the parameter value" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost class members #url should return a host-mapped url" name="webex-core ServiceHost class members #url should return a host-mapped url" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() should set the property failed to true" name="webex-core ServiceHost #setStatus() should set the property failed to true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() should set the property failed to false" name="webex-core ServiceHost #setStatus() should set the property failed to false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() should set the property replaced to true" name="webex-core ServiceHost #setStatus() should set the property replaced to true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() should set the property replaced to false" name="webex-core ServiceHost #setStatus() should set the property replaced to false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() should set the property replaced and failed to true" name="webex-core ServiceHost #setStatus() should set the property replaced and failed to true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() should set the property replaced and failed to false" name="webex-core ServiceHost #setStatus() should set the property replaced and failed to false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #polyGenerate() should generate a new ServiceHost" name="webex-core ServiceHost #setStatus() static methods #polyGenerate() should generate a new ServiceHost" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when catalog is missing" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when catalog is missing" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when defaultUri is missing" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when defaultUri is missing" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when hostGroup is missing" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when hostGroup is missing" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when id is missing" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when id is missing" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when priority is missing" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when priority is missing" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when uri is missing" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when uri is missing" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when catalog is invalid" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when catalog is invalid" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when defaultUri is invalid" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when defaultUri is invalid" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when hostGroup is invalid" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when hostGroup is invalid" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when id is invalid" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when id is invalid" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when priority is invalid" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when priority is invalid" time="0">
    </testcase>
    <testcase classname="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when uri is invalid" name="webex-core ServiceHost #setStatus() static methods #validate() should throw an error when uri is invalid" time="0">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:45" time="0.569" tests="10">
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist should get the feature &apos;web-high-availability&apos;" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist should get the feature &apos;web-high-availability&apos;" time="0.002">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should submit appropriate client metrics" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should submit appropriate client metrics" time="0.001">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should mark a url as failed" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should mark a url as failed" time="0.001">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should mark a url as failed for a 503" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should mark a url as failed for a 503" time="0.001">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should return a rejected promise with a reason" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is enabled should return a rejected promise with a reason" time="0.002">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is not available or disabled should return a rejected promise with the reason" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is not available or disabled should return a rejected promise with the reason" time="0">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is not available or disabled should not attempt to submit client metrics" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is not available or disabled should not attempt to submit client metrics" time="0.001">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is not available or disabled should not attempt to mark a url as failed" name="webex-core ServerErrorInterceptor #onResponseError() when reason is a webex server error and the uri exist when the web-ha feature is not available or disabled should not attempt to mark a url as failed" time="0.001">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when the reason is not a webex server error should return a rejected promise with the reason" name="webex-core ServerErrorInterceptor #onResponseError() when the reason is not a webex server error should return a rejected promise with the reason" time="0">
    </testcase>
    <testcase classname="webex-core ServerErrorInterceptor #onResponseError() when the uri does not exist should return a rejected promise with the reason" name="webex-core ServerErrorInterceptor #onResponseError() when the uri does not exist should return a rejected promise with the reason" time="0">
    </testcase>
  </testsuite>
  <testsuite name="plugin-device" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:45" time="0.407" tests="11">
    <testcase classname="plugin-device features-model collections should have &apos;developer&apos;, &apos;entitlement&apos; and &apos;user&apos; keys" name="plugin-device features-model collections should have &apos;developer&apos;, &apos;entitlement&apos; and &apos;user&apos; keys" time="0.003">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is changed in &apos;developer&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is changed in &apos;developer&apos; should call the event-mapped function" time="0.002">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is added to &apos;developer&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is added to &apos;developer&apos; should call the event-mapped function" time="0">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is removed from &apos;developer&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is removed from &apos;developer&apos; should call the event-mapped function" time="0">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is changed in &apos;entitlement&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is changed in &apos;entitlement&apos; should call the event-mapped function" time="0.001">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is added to &apos;entitlement&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is added to &apos;entitlement&apos; should call the event-mapped function" time="0.001">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is removed from &apos;entitlement&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is removed from &apos;entitlement&apos; should call the event-mapped function" time="0">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is changed in &apos;user&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is changed in &apos;user&apos; should call the event-mapped function" time="0.002">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is added to &apos;user&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is added to &apos;user&apos; should call the event-mapped function" time="0.001">
    </testcase>
    <testcase classname="plugin-device features-model events when a feature is removed from &apos;user&apos; should call the event-mapped function" name="plugin-device features-model events when a feature is removed from &apos;user&apos; should call the event-mapped function" time="0">
    </testcase>
    <testcase classname="plugin-device features-model #clear() should clear all of the features" name="plugin-device features-model #clear() should clear all of the features" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:46" time="0.331" tests="13">
    <testcase classname="webex-core ServiceCatalog #namespace is accurate to plugin name" name="webex-core ServiceCatalog #namespace is accurate to plugin name" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #serviceGroups has all the required keys" name="webex-core ServiceCatalog #serviceGroups has all the required keys" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #serviceGroups contains values that are arrays" name="webex-core ServiceCatalog #serviceGroups contains values that are arrays" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #status has all the required keys" name="webex-core ServiceCatalog #status has all the required keys" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #status has valid key value types" name="webex-core ServiceCatalog #status has valid key value types" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #allowedDomains is an array" name="webex-core ServiceCatalog #allowedDomains is an array" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #clean() should reset service group ready status" name="webex-core ServiceCatalog #clean() should reset service group ready status" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #clean() should clear all collected service groups" name="webex-core ServiceCatalog #clean() should clear all collected service groups" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #findAllowedDomain() finds an allowed domain that matches a specific url" name="webex-core ServiceCatalog #findAllowedDomain() finds an allowed domain that matches a specific url" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #getAllowedDomains() returns a an array of allowed hosts" name="webex-core ServiceCatalog #getAllowedDomains() returns a an array of allowed hosts" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #list() must return an object" name="webex-core ServiceCatalog #list() must return an object" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #list() returned list must be of shape {Record&lt;string, string&gt;}" name="webex-core ServiceCatalog #list() returned list must be of shape {Record&lt;string, string&gt;}" time="0">
    </testcase>
    <testcase classname="webex-core ServiceCatalog #setAllowedDomains() sets the allowed domain entries to new values" name="webex-core ServiceCatalog #setAllowedDomains() sets the allowed domain entries to new values" time="0">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:45" time="0.84" tests="20">
    <testcase classname="webex-core ServiceUrl #namespace is accurate to plugin name" name="webex-core ServiceUrl #namespace is accurate to plugin name" time="0.006">
    </testcase>
    <testcase classname="webex-core ServiceUrl #defautUrl is valid value" name="webex-core ServiceUrl #defautUrl is valid value" time="0.003">
    </testcase>
    <testcase classname="webex-core ServiceUrl #hosts is valid value" name="webex-core ServiceUrl #hosts is valid value" time="0.003">
    </testcase>
    <testcase classname="webex-core ServiceUrl #hosts contains all appended hosts on construction" name="webex-core ServiceUrl #hosts contains all appended hosts on construction" time="0.009">
    </testcase>
    <testcase classname="webex-core ServiceUrl #name is valid value" name="webex-core ServiceUrl #name is valid value" time="0.004">
    </testcase>
    <testcase classname="webex-core ServiceUrl #_generateHostUrl() returns a string" name="webex-core ServiceUrl #_generateHostUrl() returns a string" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #_generateHostUrl() replaces the host of a pass in url" name="webex-core ServiceUrl #_generateHostUrl() replaces the host of a pass in url" time="0.007">
    </testcase>
    <testcase classname="webex-core ServiceUrl #_getHostUrls() returns an array of objects with an updated url and priority" name="webex-core ServiceUrl #_getHostUrls() returns an array of objects with an updated url and priority" time="0.005">
    </testcase>
    <testcase classname="webex-core ServiceUrl #_getHostUrls() generates an array objects from current hosts" name="webex-core ServiceUrl #_getHostUrls() generates an array objects from current hosts" time="0.003">
    </testcase>
    <testcase classname="webex-core ServiceUrl #_getPriorityHostUrl() validates that the retrieved high priority host matches the manually retrieved high priority host" name="webex-core ServiceUrl #_getPriorityHostUrl() validates that the retrieved high priority host matches the manually retrieved high priority host" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #_getPriorityHostUrl() should reset the hosts when all have failed" name="webex-core ServiceUrl #_getPriorityHostUrl() should reset the hosts when all have failed" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #failHost() marks a host as failed" name="webex-core ServiceUrl #failHost() marks a host as failed" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #failHost() does not mark failed a host if the hostUrl is defaultUrl" name="webex-core ServiceUrl #failHost() does not mark failed a host if the hostUrl is defaultUrl" time="0.003">
    </testcase>
    <testcase classname="webex-core ServiceUrl #failHost() returns true if hostUrl was found" name="webex-core ServiceUrl #failHost() returns true if hostUrl was found" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #failHost() returns false if hostUrl was not found" name="webex-core ServiceUrl #failHost() returns false if hostUrl was not found" time="0.005">
    </testcase>
    <testcase classname="webex-core ServiceUrl #get() returns a string" name="webex-core ServiceUrl #get() returns a string" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #get() returns the defaultUrl value" name="webex-core ServiceUrl #get() returns the defaultUrl value" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #get() returns the highest priority host as url" name="webex-core ServiceUrl #get() returns the highest priority host as url" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #get() when a clusterId is provided when the clusterId is a home cluster should return a url from the correct cluster" name="webex-core ServiceUrl #get() when a clusterId is provided when the clusterId is a home cluster should return a url from the correct cluster" time="0.002">
    </testcase>
    <testcase classname="webex-core ServiceUrl #get() when a clusterId is provided when the clusterId is not a home cluster should return a url from the correct cluster" name="webex-core ServiceUrl #get() when a clusterId is provided when the clusterId is not a home cluster should return a url from the correct cluster" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:46" time="0.322" tests="8">
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code should return a rejected promise with the reason" name="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code should return a rejected promise with the reason" time="0.004">
    </testcase>
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code should clear credentials" name="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code should clear credentials" time="0.001">
    </testcase>
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code should present an appropriate logger message" name="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code should present an appropriate logger message" time="0.001">
    </testcase>
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code when the device plugin is mounted should clear the device" name="webex-core EmbargoInterceptor #onResponseError() when the reason does have a &apos;451&apos; status code when the device plugin is mounted should clear the device" time="0">
    </testcase>
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code should return a rejected promise with the reason" name="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code should return a rejected promise with the reason" time="0">
    </testcase>
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code should not clear credentials" name="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code should not clear credentials" time="0">
    </testcase>
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code should not present any logger message" name="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code should not present any logger message" time="0">
    </testcase>
    <testcase classname="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code when the device plugin is mounted should not clear the device" name="webex-core EmbargoInterceptor #onResponseError() when the reason does not have a &apos;451&apos; status code when the device plugin is mounted should not clear the device" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Webex" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:46" time="0.325" tests="2">
    <testcase classname="Webex #internal grants plugins access to their namepace config" name="Webex #internal grants plugins access to their namepace config" time="0.015">
    </testcase>
    <testcase classname="Webex #internal controls ready status" name="Webex #internal controls ready status" time="0.008">
    </testcase>
  </testsuite>
  <testsuite name="_setup" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:46" time="0.259" tests="1">
    <testcase classname="_setup a sample test so that it does not throw an error" name="_setup a sample test so that it does not throw an error" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="webex-core" errors="0" failures="0" skipped="0" timestamp="2024-04-16T15:14:46" time="0.293" tests="7">
    <testcase classname="webex-core ServiceState #constructor() should create a collection of catalog states" name="webex-core ServiceState #constructor() should create a collection of catalog states" time="0.001">
    </testcase>
    <testcase classname="webex-core ServiceState #constructor() should initialize states with false collecting values" name="webex-core ServiceState #constructor() should initialize states with false collecting values" time="0">
    </testcase>
    <testcase classname="webex-core ServiceState #setCollecting() should set the collecting value of a catalog state to true" name="webex-core ServiceState #setCollecting() should set the collecting value of a catalog state to true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceState #setCollecting() should set the collecting value of a catalog state to false" name="webex-core ServiceState #setCollecting() should set the collecting value of a catalog state to false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceState #setReady() should set the collecting value of a catalog state to true" name="webex-core ServiceState #setReady() should set the collecting value of a catalog state to true" time="0">
    </testcase>
    <testcase classname="webex-core ServiceState #setReady() should set the collecting value of a catalog state to false" name="webex-core ServiceState #setReady() should set the collecting value of a catalog state to false" time="0">
    </testcase>
    <testcase classname="webex-core ServiceState static methods #generateCatalogState() returns an object with the correct keys" name="webex-core ServiceState static methods #generateCatalogState() returns an object with the correct keys" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="plugin-mercury" errors="0" failures="2" skipped="7" timestamp="2024-04-16T15:14:36" time="11.911" tests="39">
    <testcase classname="plugin-mercury Mercury #listen() proxies to #connect()" name="plugin-mercury Mercury #listen() proxies to #connect()" time="0.011">
    </testcase>
    <testcase classname="plugin-mercury Mercury #stopListening() proxies to #disconnect()" name="plugin-mercury Mercury #stopListening() proxies to #disconnect()" time="0.004">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() lazily registers the device" name="plugin-mercury Mercury #connect() lazily registers the device" time="0.016">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() connects to Mercury using default url" name="plugin-mercury Mercury #connect() connects to Mercury using default url" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `maxRetries` attempts" name="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `maxRetries` attempts" time="0.008">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `initialConnectionMaxRetries` attempts" name="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `initialConnectionMaxRetries` attempts" time="5.01">
      <failure>Error: thrown: &quot;Exceeded timeout of 5000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:201:26
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:154:7)
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:127:5)
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:26:3)
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at Object.describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:25:1)
    at Runtime._execModule (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `initialConnectionMaxRetries` attempts" name="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `initialConnectionMaxRetries` attempts" time="5.046">
      <failure>Error: thrown: &quot;Exceeded timeout of 5000 ms for a test.
Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.&quot;
    at /Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:208:26
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:154:7)
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:127:5)
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:26:3)
    at _dispatchDescribe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:91:26)
    at describe (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/index.js:55:5)
    at Object.describe (/Users/arungane/SDK v3/WebSDKv3/packages/@webex/internal-plugin-mercury/test/unit/spec/mercury.js:25:1)
    at Runtime._execModule (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/node_modules/jest-runtime/build/index.js:1439:24)
    at Runtime._loadModule (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/node_modules/jest-runtime/build/index.js:1022:12)
    at Runtime.requireModule (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/node_modules/jest-runtime/build/index.js:882:12)
    at jestAdapter (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:77:13)
    at processTicksAndRejections (node:internal/process/task_queues:96:5)
    at runTestInternal (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/runTest.js:444:34)
    at Object.worker (/Users/arungane/SDK v3/WebSDKv3/node_modules/jest-runner/build/testWorker.js:106:12)</failure>
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `initialConnectionMaxRetries` attempts" name="plugin-mercury Mercury #connect() when `maxRetries` is set fails after `initialConnectionMaxRetries` attempts" time="0.012">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() can safely be called multiple times" name="plugin-mercury Mercury #connect() can safely be called multiple times" time="0.012">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when the connection fails backs off exponentially" name="plugin-mercury Mercury #connect() when the connection fails backs off exponentially" time="0.009">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when the connection fails with `BadRequest` fails permanently" name="plugin-mercury Mercury #connect() when the connection fails with `BadRequest` fails permanently" time="0.007">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when the connection fails with `UnknownResponse` triggers a device refresh" name="plugin-mercury Mercury #connect() when the connection fails with `UnknownResponse` triggers a device refresh" time="0.008">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when the connection fails with `NotAuthorized` triggers a token refresh" name="plugin-mercury Mercury #connect() when the connection fails with `NotAuthorized` triggers a token refresh" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when the connection fails with `Forbidden` fails permanently" name="plugin-mercury Mercury #connect() when the connection fails with `Forbidden` fails permanently" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when the connection fails when web-high-availability feature is enabled marks current socket url as failed and get new one on Connection Error" name="plugin-mercury Mercury #connect() when the connection fails when web-high-availability feature is enabled marks current socket url as failed and get new one on Connection Error" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when connected resolves immediately" name="plugin-mercury Mercury #connect() when connected resolves immediately" time="0.01">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when connected does not continue attempting to connect" name="plugin-mercury Mercury #connect() when connected does not continue attempting to connect" time="0.005">
    </testcase>
    <testcase classname="plugin-mercury Mercury #connect() when webSocketUrl is provided connects to Mercury with provided url" name="plugin-mercury Mercury #connect() when webSocketUrl is provided connects to Mercury with provided url" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury Websocket proxy agent connects to Mercury using proxy agent" name="plugin-mercury Mercury Websocket proxy agent connects to Mercury using proxy agent" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury Websocket proxy agent connects to Mercury without proxy agent" name="plugin-mercury Mercury Websocket proxy agent connects to Mercury without proxy agent" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury #disconnect() disconnects the WebSocket" name="plugin-mercury Mercury #disconnect() disconnects the WebSocket" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury #disconnect() stops emitting message events" name="plugin-mercury Mercury #disconnect() stops emitting message events" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury #disconnect() when there is a connection attempt inflight stops the attempt when disconnect called" name="plugin-mercury Mercury #disconnect() when there is a connection attempt inflight stops the attempt when disconnect called" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury #disconnect() when there is a connection attempt inflight stops the attempt when backoffCall is undefined" name="plugin-mercury Mercury #disconnect() when there is a connection attempt inflight stops the attempt when backoffCall is undefined" time="0">
      <skipped/>
    </testcase>
    <testcase classname="plugin-mercury Mercury #_emit() emits Error-safe events and log the error with the call parameters" name="plugin-mercury Mercury #_emit() emits Error-safe events and log the error with the call parameters" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_applyOverrides() merges a single header field with data" name="plugin-mercury Mercury #_applyOverrides() merges a single header field with data" time="0.004">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_applyOverrides() merges a multiple header fields with data" name="plugin-mercury Mercury #_applyOverrides() merges a multiple header fields with data" time="0.004">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_applyOverrides() merges headers when Mercury messages arrive" name="plugin-mercury Mercury #_applyOverrides() merges headers when Mercury messages arrive" time="0.003">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() uses device default webSocketUrl" name="plugin-mercury Mercury #_prepareUrl() uses device default webSocketUrl" time="0.003">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() uses provided webSocketUrl" name="plugin-mercury Mercury #_prepareUrl() uses provided webSocketUrl" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() requests text-mode WebSockets" name="plugin-mercury Mercury #_prepareUrl() requests text-mode WebSockets" time="0.004">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() requests the buffer state message" name="plugin-mercury Mercury #_prepareUrl() requests the buffer state message" time="0.007">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() does not add conditional properties" name="plugin-mercury Mercury #_prepareUrl() does not add conditional properties" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() when web-high-availability is enabled uses webSocketUrl provided by device" name="plugin-mercury Mercury #_prepareUrl() when web-high-availability is enabled uses webSocketUrl provided by device" time="0.006">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() when &apos;web-shared-socket&apos; is enabled requests shared socket support" name="plugin-mercury Mercury #_prepareUrl() when &apos;web-shared-socket&apos; is enabled requests shared socket support" time="0.008">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() when &apos;web-shared-socket&apos; is enabled requests the registration banner" name="plugin-mercury Mercury #_prepareUrl() when &apos;web-shared-socket&apos; is enabled requests the registration banner" time="0.003">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() when &apos;web-shared-socket&apos; is enabled does not request the buffer state message" name="plugin-mercury Mercury #_prepareUrl() when &apos;web-shared-socket&apos; is enabled does not request the buffer state message" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury Mercury #_prepareUrl() when using an ephemeral device indicates multiple connections may be coming from this user" name="plugin-mercury Mercury #_prepareUrl() when using an ephemeral device indicates multiple connections may be coming from this user" time="0.002">
    </testcase>
    <testcase classname="plugin-mercury ping pong latency event is forwarded should forward ping pong latency event" name="plugin-mercury ping pong latency event is forwarded should forward ping pong latency event" time="0.005">
    </testcase>
  </testsuite>
</testsuites>